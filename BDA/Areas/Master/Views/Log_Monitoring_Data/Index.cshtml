
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
}

@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.14/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/3.3.1/exceljs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.4.0/polyfill.min.js"></script>*@

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>

<script type="text/javascript">
    function exportToPDF() {
        $.ajax({
                type: "POST",
                url: "@Url.Action("LogExport", "Log_Monitoring_Data")",
                success: function (response) {
                    if (response.result == "Success") {
                        const doc = new jsPDF({
                            orientation: "landscape",
                            unit: "cm",
                            format: [21, 60]
                        });
                        var dataGrid = $("#grid1").dxDataGrid("instance");
                        var fileName = "Log_Monitoring_Data_" + new Date().toISOString().slice(0, 10) + ".pdf";
                        doc.setFontSize("6")
                        //var keys = $("#grid1").dxDataGrid("getSelectedRowsData")
                        //console.log(keys)
                        DevExpress.pdfExporter.exportDataGrid({
                            jsPDFDocument: doc,
                            component: dataGrid,
                            keepColumnWidths: true,
                            //selectedRowsOnly: true
                        }).then(function () {
                            doc.save(fileName);
                        });
                    }
                }
            });
    }

    function exportToEx() {
        $.ajax({
                type: "POST",
                url: "@Url.Action("LogExport", "Log_Monitoring_Data")",
                success: function (response) {
                    if (response.result == "Success") {
                        var dataGrid = $("#grid1").dxDataGrid("instance");
                        var fileName = "Log_Monitoring_Data_" + new Date().toISOString().slice(0, 10) + ".xlsx";

                        var workbook = new ExcelJS.Workbook();
                        var worksheet = workbook.addWorksheet('Main Sheet');

                        DevExpress.excelExporter.exportDataGrid({
                            component: dataGrid,
                            worksheet: worksheet,
                            autoFilterEnabled: true,
                            //selectedRowsOnly: true
                        }).then(function () {
                            workbook.xlsx.writeBuffer().then(function (buffer) {
                                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), fileName);
                            });
                        });
                        dataGrid.cancel = true;
                    }
                }
            });
    }

    function redirDetail(e) {
        var logDate = e.row.data.log_date;
        var periode = e.row.data.log_periode;
        var jobID = e.row.data.log_kode;

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetGridDataDetails", "Log_Monitoring_Data")",
            data: { paramLogDate: logDate, paramPeriode: periode, paramJobId: jobID },
            dataType: "json",
            type: "POST",
        }).done(function (resp) {
            $("#popup").dxPopup({
                visible: true,
                title: "Detil",
                showCloseButton: true,
                height: 400,
                contentTemplate: function (contentElement) {
                    const detailGrid = $("<div>").appendTo(contentElement);
                    detailGrid.dxDataGrid({
                        dataSource: resp.data,
                        columns: [
                            { dataField: "log_date", caption: "Tanggal Log" },
                            { dataField: "log_kode", caption: "Kode Job" },
                            { dataField: "log_seq", caption: "Urutan ProseJob" },
                            { dataField: "log_nama", caption: "Nama Job" },
                            { dataField: "log_start", caption: "Mulai" },
                            { dataField: "log_end", caption: "Selesai" },
                            { dataField: "log_delete_cnt", caption: "Jumlah Penghapusan" },
                            { dataField: "log_insert_cnt", caption: "Jumlah Insert Data" },
                            { dataField: "log_status", caption: "Status" },
                            { dataField: "log_desc", caption: "Keterangan" },
                        ],
                        showBorders: true
                    });
                }
            });
        });
    }

    function redirDelete() {}

    function onSelectionChanged(e) {
        if (e.addedItems && e.addedItems.length > 0) {
            // Get the input element of the ComboBox
            var inputElement = e.component.$element().find("input").first();

            // Clear the search text
            if (inputElement.length) {
                inputElement.val("");
            }
        }
    }

    function gridOnBeforeSend(method, ajaxOptions) {
        var logDate = $("#logDate").dxDateBox("instance").option('value');
        var status = $("#status").dxSelectBox("instance").option('value');

        if (logDate != null) {
            logDate = logDate.getFullYear() + '-' + String(logDate.getMonth() + 1).padStart(2, '0') + '-' + String(logDate.getDate()).padStart(2, '0');
        }

        ajaxOptions.data.paramLogDate = logDate;
        ajaxOptions.data.paramStatus = status;

    }
</script>


<div class="card card-default">
    <div class="row filter-panel" style="padding-top:0px;">
        <div class="card-body">
            <div class="row">
                <div class="col-lg-4 form-group">
                    <label>Tanggal Log</label>
                    @(Html.DevExtreme().DateBox()
                            .ID("logDate")
                            .Name("logDate")
                            .Width("100%").Value(DateTime.Now).DisplayFormat("dd MMM yyyy"))
                </div>

                @{
                    var status = new[] {
                                    new { Text = "(All)", Value = "" },
                                    new { Text = "Initialization/Running", Value = "1" },
                                    new { Text = "Finish - Success", Value = "2" },
                                    new { Text = "Error", Value = "3" },
                                    new { Text = "Others", Value = "4" }
                                  };
                }

                <div class="col-lg-4 form-group">
                    <label>Status</label>
                    @(Html.DevExtreme().SelectBox()
                        .ID("status")
                        .DataSource(status)
                        .SearchEnabled(true)
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                        .Value("")
                        .OnSelectionChanged("onSelectionChanged")
                        .Width("100%")
                        .Placeholder("(ALL)"))
                </div>
            </div>

            <div class="float-left">
                @(Html.DevExtreme().Button().Type(ButtonType.Default).Text("Cari").OnClick(@<text>
                    function () {
                        $("#grid1").dxDataGrid("instance").getDataSource().reload();
                    }</text>))
            </div>

            <div class="float-right">
                @if (ViewBag.Export)
                {
                    <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:exportToEx();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                    <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:exportToPDF();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                }
            </div>
        </div>
    </div>

    <div class="gridview-div">

        @Html.AntiForgeryToken()

        @(Html.DevExtreme().DataGrid()
            .ID("grid1")
            .DataSource(d => d.Mvc()
                .Controller("Log_Monitoring_Data")
                .LoadAction("GetGridData")
                .OnBeforeSend("gridOnBeforeSend"))
            .RemoteOperations(true)
            .Export(e => e.AllowExportSelectedData(true).Texts(q => q.ExportTo("Ekspor")))
            .Width("100%")
            .Columns(columns =>
            {

                columns.Add().DataField("log_date").Caption("Tanggal Log").Width("10%").DataType(GridColumnDataType.DateTime).Format("dd MMM yyyy").SortOrder(SortOrder.Desc);
                columns.Add().DataField("log_kode").Caption("Kode Job").Width("20%");
                columns.Add().DataField("log_nama").Caption("Nama Job").Width("20%");
                columns.Add().DataField("log_periode").Caption("Periode").Width("10%");

                columns.Add().DataField("log_start").Caption("Mulai").Width("10%").DataType(GridColumnDataType.DateTime).Format("dd MMM yyyy HH:mm:ss");
                columns.Add().DataField("log_end").Caption("Selesai").Width("10%").DataType(GridColumnDataType.DateTime).Format("dd MMM yyyy HH:mm:ss");
                columns.Add().DataField("log_total_waktu").Caption("Total Waktu").Width("10%");

                columns.Add().DataField("log_delete_cnt").Caption("Total Penghapusan").Width("10%");
                columns.Add().DataField("log_insert_cnt").Caption("Total Insert Data").Width("10%");
                columns.Add().DataField("log_status").Caption("Status").Width("10%");
                columns.Add().DataField("log_percentage").Caption("Persentase").Width("10%");
                columns.Add().Type(GridCommandColumnType.Buttons).Caption("Aksi").Buttons(b =>
                            {
                                b.Add().Hint("Detail")
                                    .Icon("activefolder")
                                    .OnClick("redirDetail");

                                b.Add().Hint("Delete")
                                    .Icon("trash")
                                    .OnClick("redirDelete");
                            });
            })
            .FilterRow(f => f.Visible(true))
            //.AllowColumnResizing(true)
            .WordWrapEnabled(true)
            .ShowBorders(false)
            //.Selection(c => c.Mode(SelectionMode.Multiple))
            .RowAlternationEnabled(false)
            .Paging(p =>
            {
                p.PageSize(20);
                p.Enabled(true);
            }
            )
             .Pager(p =>
             {
                 p.ShowInfo(true);
             }
             )
        )

    </div>
    <div id="popup">
        @* <div class="float-right">
            @if (ViewBag.Export)
            {
                <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:exportToEx();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:exportToPDF();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
            }
        </div> *@
    </div>
</div>

<style type="text/css">
    .mandatory {
        background-color: red !important;
    }

    .dx-datagrid-headers {
        background-color: #a01905;
        color: #ffffff;
    }
</style>
