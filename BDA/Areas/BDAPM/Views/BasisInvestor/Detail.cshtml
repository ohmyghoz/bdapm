@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
    string reportId = "pe_segmentation_bridging_detail";
    var pe = ViewBag.pe;
    var periode = ViewBag.periode;
    var maxItems = db.GetSetting("LimitFilterLJK");
}
@section RightToolbar {
    <div class="d-flex align-items-center">
        <a class="nav-link btn btn-light-warning font-weight-bolder btn-sm mr-2" href="@Url.Action("Index")"><i class="fa fa-arrow-left"></i> Kembali Ke Daftar</a>
    </div>
}
@inject BDA.DataModel.DataEntities db

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">
        @*filter*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">
                    <div class="form-group ml-3">
                        <input type="button" id="btnBasisInvestor" class="btn btn-danger" value="Basis Investor" onclick="location.href='@Url.Action("Index", "BasisInvestor")'" />
                    </div>&nbsp;&nbsp;
                    <div class="form-group">
                        <input type="button" id="btnDetailBI" class="btn btn-danger" value="Detail Basis Investor" onclick="location.href='@Url.Action("Detail", "BasisInvestor")?pe=@ViewBag.pe&periode=@ViewBag.periode'" />
@*                         <input type="button" id="btnDetailBI" class="btn btn-danger" value="Detail Basis Investor" onclick="location.href='@Url.Action("Detail", "BasisInvestor")'" />
 *@                    </div>&nbsp;&nbsp;
                    <div class="form-group">
                        <input type="button" id="btnSumTxSID" class="btn btn-danger" value="Summary Transaction SID" onclick="alert('Summary Transaction SID ditampilkan dengan klik tombol detail pada Tabel!')" />
                    </div>&nbsp;&nbsp;
                </div>
                <div class="row">

               

                    <div class="col-lg-2 form-group">
                        <label>Periode</label>
                        @(Html.DevExtreme().DateBox()
                            .ID("Periode")
                            .Disabled(true)
                            .DisplayFormat("MMM yyyy")
                            .Value(periode)
                            .Max(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Nama PE</label>
                        @(Html.DevExtreme().SelectBox()
                            .Disabled(true)
                            .ID("namaPEid")
                            .DataSource(d => d.Mvc()
                                .Controller("BasisInvestor")
                                .Area("BDAPM")
                                .LoadAction("GetNamaPE")
                                .Key("value"))
                            .Value(pe)
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .SearchEnabled(true)
                            .Width("100%")
                            )
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Negara@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Nation")
                            .DataSource(d => d.Mvc()
                                .Controller("BasisInvestor")
                                .Area("BDAPM")
                                .LoadAction("GetNamaNegara")
                                .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            )
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Provinsi@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Province")
                            .DataSource(d => d.Mvc()
                                .Controller("BasisInvestor")
                                .Area("BDAPM")
                                .LoadAction("GetNamaProvinsi")
                                .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Kota@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("City")
                            .DataSource(d => d.Mvc()
                                .Controller("BasisInvestor")
                                .Area("BDAPM")
                                .LoadAction("GetNamaKota")
                                .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Jenis Kelamin@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Sex")
                            .DataSource(new[] {
                                new { Text = "(ALL)", Value = "" },
                                new { Text = "Laki-laki", Value = "Male" },
                                new { Text = "Perempuan", Value = "Female" }
                                })
                            .SearchEnabled(true)
                            .Value("")
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Usia@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Age")
                            .DataSource(new[] {
                                new { Text = "(ALL)", Value = "" },
                                new { Text = "<= 30 Tahun", Value = "<=30" },
                                new { Text = "31 - 40 Tahun", Value = "31 - 40" },
                                new { Text = "41 - 50 Tahun", Value = "41 - 50" },
                                new { Text = "51 - 60 Tahun", Value = "51 - 60" },
                                new { Text = "> 60 Tahun", Value = "> 60" }
                                })
                            .SearchEnabled(true)
                            .Value("")
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Pendidikan@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Education")
                            .DataSource(new[] {
                                new { Text = "(ALL)", Value = "" },
                                new { Text = "SMP", Value = "SMP" },
                                new { Text = "SMA", Value = "SMA" },
                                new { Text = "D3", Value = "D3" },
                                new { Text = "S1", Value = "S1" },
                                new { Text = "S2", Value = "S2" },
                                new { Text = "S3", Value = "S3" },
                                new { Text = "Lainnya", Value = "OTH" }
                                })
                            .SearchEnabled(true)
                            .Value("")
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Pekerjaan@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Job")
                            .DataSource(new[] {
                                new { Text = "(ALL)", Value = "" },
                                new { Text = "Wiraswasta", Value = "Enterpreneur" },
                                new { Text = "Pensiunan", Value = "Retirement" },
                                new { Text = "Pegawai Swasta", Value = "Private Employee" },
                                new { Text = "Ibu Rumah Tangga", Value = "Housewife" },
                                new { Text = "Pegawai Negeri Sipil", Value = "Civil Servant" },
                                new { Text = "Dosen/Guru", Value = "Lecturer/Teacher" },
                                new { Text = "TNI/POLRI", Value = "TNI/POLRI" },
                                new { Text = "Pelajar/Mahasiswa", Value = "Student" },
                                new { Text = "Lainnya", Value = "Others" }
                                })
                            .SearchEnabled(true)
                            .Value("")
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>Penghasilan@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Income")
                            .DataSource(new[] {
                                new { Text = "(ALL)", Value = "" },
                                new { Text = "< 10 Juta/Tahun", Value = "< 10 million/year" },
                                new { Text = "> 10 - 50 Juta/Tahun", Value = "> 10 - 50 million/year" },
                                new { Text = "> 50 - 100 Juta/Tahun", Value = "> 50 - 100 million/year" },
                                new { Text = "> 100 - 500 Juta/Tahun", Value = "> 100 - 500 million/year" },
                                new { Text = "> 500 Juta - 1 Miliar/Tahun", Value = "> 500 million - 1 billion/year" },
                                new { Text = "> 1 Miliar/Tahun", Value = "> 1 billion/year" },
                                new { Text = "Lainnya", Value = "Others" }
                                })
                            .SearchEnabled(true)
                            .Value("")
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                </div>

                <div class="float-left">
                    @(Html.DevExtreme().Button()
                        .ID("Filter")
                        .Type(ButtonType.Default)
                        .Text("Tampilkan")
                        .OnClick("onButtonFilterClicked")
                        .ValidationGroup("Filter"))
                </div>
            </div>
        </div>
        @*grid*@
        <div>
            <div class="float-right">
                <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcel();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdf();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                <br /> <br />
            </div>
            <br />
            <div class="gridview-div">
                 @(Html.DevExtreme().DataGrid()
                    .ID("grid1")
                    .Width("100%")
                    .AllowColumnResizing(true)
                    .ColumnAutoWidth(true)
                    .Columns(columns =>
                        {
                            columns.Add().DataField("tradeid").Visible(false);
                            columns.Add().DataField("sid").Caption("SID");
                            columns.Add().DataField("fullname").Caption("Full Name");
                            columns.Add().DataField("newsre").Caption("New SRE");
                            columns.Add().DataField("invlasttrxindays").Caption("Investor Last Transaction in Days");
                            columns.Add().DataField("invtrxfreq").Caption("Investor Transaction Frequency");
                            columns.Add().DataField("invtotalval").Caption("Investor Total Value");
                            columns.Add().Type(GridCommandColumnType.Buttons).Caption("Detail").Buttons(b =>
                            {
                                b.Add().Hint("Summary Transaction SID")
                                    .Icon("detailslayout")
                                    .OnClick("function(e) {e.event.preventDefault(); redirDetail(e);}");
                            });
                        })
                    .ColumnResizingMode(ColumnResizingMode.Widget)
                    .FilterRow(f => f.Visible(true))
                    .ShowBorders(false)
                    .ShowRowLines(true)
                    .WordWrapEnabled(true)
                    .Paging(p =>
                        {
                            p.PageSize(20);
                            p.Enabled(true);
                        })
                    .Pager(p =>
                        {
                            p.ShowInfo(true);
                        })
                ) 
            </div>
        </div>

        <!-- The Modal  Detail-->
        <div class="modal fade" id="ModalSimpanPenggunaanData" tabindex="-1" role="document" aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#0066b2">
                        <h4 class="modal-title" style="text-align:left">
                            <font color="white">Pilih Penggunaan Data</font>
                        </h4>
                    </div><!--Modal Header-->
                    <!-- Modal body -->
                    <div class="modal-body">
                        <form id="StrukturFormDetail" method="POST" action="" class="form-horizontal row-border">
                            <div class="row" style="padding: 0 10px 0 10px;">
                                @(Html.DevExtreme().SelectBox()
                                    .ID("penggunaandataid")
                                    .DataSource(d => d.Mvc()
                                    .Controller("PenggunaanData")
                                    .Area("Website")
                                    .LoadAction("GetPenggunaanData")
                                    .Key("value"))
                                    .ValueExpr("value")
                                    .DisplayExpr("text")
                                    .SearchEnabled(true)
                                    .Width("100%")
                                    .FocusStateEnabled(true)
                                    )
                            </div>
                        </form>
                    </div>
                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" id="btnSavePenggunaanData" class="btn btn-primary" data-bs-dismiss="modal"><i class='fa fa-save'></i> Save</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- The Modal  Detail-->
    </div>
}

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>

<script>
    const PE = '@ViewBag.pe';
    const periode = '@ViewBag.periode';
    var sid = 0;
    var tradeid = 0;

    $(function () {
        $("#penggunaandataid").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Penggunaan Data] harus dipilih" }]
        })
    });

    $(window).on('load', function () {
        $("#ModalSimpanPenggunaanData").modal("show");
    });

    $("#btnSavePenggunaanData").click(function () {
        let penggunaandataid = $("#penggunaandataid").dxSelectBox("instance").option("value");

        if (penggunaandataid == null) {
            alert("Silahkan Pilih Tujuan Penggunaan Data");
            return false;
        } else {
            $.ajax({
                url: '@Url.Action("SimpanPenggunaanData", "BasisInvestor")',
                data: { id: penggunaandataid },
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.success == true) {
                        //alert(data.message);
    @* waitingDialog.hide(); *@
                            $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Success !";
                    }
                    else if (data.success == false) {
    @*  waitingDialog.hide(); *@
                            alert(data.message);
                        $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Failed !";
                    }
                }
            });
        }
    });

    function onSelectionChanged(e) {
        if (e.addedItems && e.addedItems.length > 0) {
            // Get the input element of the ComboBox
            var inputElement = e.component.$element().find("input").first();

            // Clear the search text
            if (inputElement.length) {
                inputElement.val("");
            }
        }
    }

    function redirDetail(e) {
        sid = e.row.data.sid;
        tradeid = e.row.data.tradeid;
        var url = '@Url.Action("SumTxSID", "BasisInvestor")?pe=' + PE + '&periode=' + periode + '&sid=' + sid + '&tradeid=' + tradeid;
        window.open(url, '"_blank"');
    }

    function onButtonFilterClicked(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") {
            var negara = $("#Nation").dxSelectBox("instance").option("value");
            var provinsi = $("#Province").dxSelectBox("instance").option("value");
            var kota = $("#City").dxSelectBox("instance").option("value");
            var jenisKelamin = $("#Sex").dxSelectBox("instance").option("value");
            var usia = $("#Age").dxSelectBox("instance").option("value");
            var pendidikan = $("#Education").dxSelectBox("instance").option("value");
            var pekerjaan = $("#Job").dxSelectBox("instance").option("value");
            var penghasilan = $("#Income").dxSelectBox("instance").option("value");


            var grid = $("#grid1").dxDataGrid("instance");
            grid.beginCustomLoading('Loading...');

            var ds = DevExpress.data.AspNet.createStore({
                loadUrl: '@Url.Action("GetGridDetail", "BasisInvestor")',
                loadMode: "processed",
                loadParams: {
                    periodeAwal: periode,
                    namaPE: PE,
                    negara: negara,
                    provinsi: provinsi,
                    kota: kota,
                    jenisKelamin: jenisKelamin,
                    usia: usia,
                    pendidikan: pendidikan,
                    pekerjaan: pekerjaan,
                    penghasilan: penghasilan
                }
            });

            grid.option("dataSource", ds);
            grid.endCustomLoading();
        }
    }

    function ExportToExcel() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportBIDetail", "BasisInvestor")",
            success: function (response) {
                if (response.result == "Success") {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('Detail Basis Investor');

                    DevExpress.excelExporter.exportDataGrid({
                        component: $("#grid1").dxDataGrid("instance"),
                        worksheet: worksheet,
                        customizeCell: function (options) {
                            var { gridCell, excelCell } = options;

                            if (gridCell.rowType === 'data') {
                                if (options.gridCell.column.dataType === 'number') {
                                    excelCell.numFmt = '#,##0';
                                }
                            }
                        }
                    }).then(function () {
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: "application/octet-stream" }), "BasisInvestorDetail_" + new Date().toISOString().slice(0, 10) + ".xlsx");
                        });
                    });
                }
            }
        });
    }

    function ExportToPdf() {
        var dataGrid = $("#grid1").dxDataGrid("instance");
        dataGrid.option("onExporting", function (e) { });
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            fd.append("name", "Detail");
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportPDF", "BasisInvestor")",
                data: fd,
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("FileIndex", "BasisInvestor", new { name = "Detail" })"
            });
            e.cancel = true;
        });
        dataGrid.exportToExcel();
    }

    function thousandSeparatorDecimal(e) {
        e = parseFloat(e);
        if (e != null)
            return e.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 });
    }

 

    var waitingDialog = (function ($) {

        // Creating modal dialog's DOM
        var $dialog = $(
            '<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true" style="padding-top:15%; overflow-y:visible;">' +
            '<div class="modal-dialog modal-m">' +
            '<div class="modal-content">' +
            '<div class="modal-header"><h3 style="margin:0;"></h3></div>' +
            '<div class="modal-body">' +
            '<div class="progress progress-striped active" style="margin-bottom:0;"><div class="progress-bar" style="width: 100%"></div></div>' +
            '</div>' +
            '</div></div></div>');

        return {
            show: function (message, options) {
                // Assigning defaults
                var settings = $.extend({
                    dialogSize: 'm',
                    progressType: ''
                }, options);
                if (typeof message === 'undefined') {
                    message = 'Loading';
                }
                if (typeof options === 'undefined') {
                    options = {};
                }
                // Configuring dialog
                $dialog.find('.modal-dialog').attr('class', 'modal-dialog').addClass('modal-' + settings.dialogSize);
                $dialog.find('.progress-bar').attr('class', 'progress-bar');
                if (settings.progressType) {
                    $dialog.find('.progress-bar').addClass('progress-bar-' + settings.progressType);
                }
                $dialog.find('h3').text(message);
                // Opening dialog
                $dialog.modal();
            },
            /**
                * Closes dialog
                */
            hide: function () {
                $dialog.modal('hide');
            }
        }
    })(jQuery);

</script>

<style type="text/css">
    .mandatory {
        background-color: red !important;
    }

    .dx-datagrid-headers {
        background-color: #a01905;
        color: #ffffff;
    }
</style>
