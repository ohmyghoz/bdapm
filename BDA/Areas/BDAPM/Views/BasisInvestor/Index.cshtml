@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
    string reportId = "Segmentation_Basis_Investor";
    var p = (string[])ViewBag.period;
    var maxItems = db.GetSetting("LimitFilterLJK");
}

@inject BDA.DataModel.DataEntities db


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <style>
        .info-icon {
            color: white;
            vertical-align: middle
        }

        .tooltip-inner {
            text-align: justify;
            max-width: 640px;
            width: 640px;
        }

        .card-header {
            background-color: #a01905 !important;
        }

        #no-axes .dxc-axes-group {
            display: none;
        }

        .dx-chart-legend {
            z-index: 10;
        }
    </style>

    <div class="card card-default">
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">
                    <div class="form-group ml-3">
                        <input type="button" id="btnBasisInvestor" class="btn btn-danger" value="Basis Investor" onclick="location.href='@Url.Action("/", "BasisInvestor")'" />
                    </div>&nbsp;&nbsp;
                    <div class="form-group">
@*                         <input type="button" id="btnDetailBI" class="btn btn-danger" value="Detail Basis Investor" onclick="location.href='@Url.Action("Detail", "BasisInvestor")'" /> *@
                        <input type="button" id="btnDetailBI" class="btn btn-danger" value="Detail Basis Investor" onclick="redirDetail()" />
                    </div>&nbsp;&nbsp;
                    <div class="form-group">
@*                         <input type="button" id="btnSumTxSID" class="btn btn-danger" value="Summary Transaction SID" onclick="location.href='@Url.Action("SumTxSID", "BasisInvestor")'" /> *@
                        <input type="button" id="btnSumTxSID" class="btn btn-danger" value="Summary Transaction SID" />
                    </div>&nbsp;&nbsp;
                </div>
                <div class="row">

                    <div class="col-lg-2 form-group">
                        <label>Periode<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("Periode")
                            .DisplayFormat("dd MMM yyyy")
                            .Value(DateTime.Now)
                            .Max(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>PE<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("namaPEid")
                            .DataSource(d => d.Mvc()
                            .Controller("BasisInvestor")
                            .Area("BDAPM")
                            .LoadAction("GetNamaPE")
                            .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .SearchEnabled(true)
                            .Width("100%")
                            )
                    </div>

                    @{
                        var invType = new[] {
                new { Text = "(All)", Value = "" },
                new { Text = "Individu", Value = "Individu" },
                new { Text = "Institusi", Value = "Institusi" }
                };
                    }

                    <div class="col-lg-2 form-group">
                        <label>Investor Type@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("InvstType")
                            .DataSource(invType)
                            .SearchEnabled(true)
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .Value("")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                    @{
                        var invOrigin = new[] {
                new { Text = "(All)", Value = "" },
                new { Text = "Asing", Value = "Asing" },
                new { Text = "Lokal", Value = "Lokal" }
                };
                    }

                    <div class="col-lg-2 form-group">
                        <label>Investor Origin@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("InvstOrigin")
                            .DataSource(invOrigin)
                            .SearchEnabled(true)
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .Value("")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                    @{
                        var inpRange = new[] {
                new { Text = "(All)", Value = "" },
                new { Text = "1 Bulan", Value = "1" },
                new { Text = "6 Bulan", Value = "6" },
                new { Text = "12 Bulan", Value = "12" }
                };
                    }

                    <div class="col-lg-2 form-group">
                        <label>Input Range@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("InpRange")
                            .DataSource(inpRange)
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)")
                            .Value("")
                            )
                    </div>

                    @{
                        var market = new[] { 
                new { Text = "(All)", Value = "" },
                new { Text = "Bursa", Value = "Bursa" } 
                };
                    }

                    <div class="col-lg-2 form-group">
                        <label>Market@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Market")
                            .DataSource(market)
                            .SearchEnabled(true)
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .Value("")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                </div>

                <div class="float-left">
                    @(Html.DevExtreme().Button()
                        .ID("Filter")
                        .Type(ButtonType.Default)
                        .Text("Tampilkan")
                        .OnClick("onButtonFilterClicked")
                        .ValidationGroup("Filter"))
                </div>
            </div>
        </div>

        <div class="row row-cols-5 justify-content-center pb-10">
            <div class="col-sm-4 col-lg-2">
                <div class="card text-center h-100">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Total Clients
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="totalClients" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>

            <div class="col-sm-4 col-lg-2">
                <div class="card text-center h-100">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Active Client
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="activeClient" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>

            <div class="col-sm-4 col-lg-2">
                <div class="card text-center h-100">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Transaction Frequency
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="trxFreq" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>

            <div class="col-sm-4 col-lg-2">
                <div class="card text-center h-100">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Traded Value
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="tradedValue" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>

            <div class="col-sm-4 col-lg-2">
                <div class="card text-center h-100">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Client Liquid Amount
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="clientLiquidAmt" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="row justify-content-center">
            <div id="no-axes" class="col-xl-4">
                <div class="card text-center">
                    <div class="card-header text-white h-100">
                        Presentase By Segment <span id="tooltipGraph" class="fa fa-info-circle info-icon float-right" data-toggle="tooltip" data-placement="auto" data-html="true" title="<p><b>Investor Total Value adalah nilai tengah atau median dari keseluruhan nasabah yang termasuk kategori nasabah tersebut (bukan melainkan total transaksi secara keseluruhan)</b></p>"></span>
                    </div>

                    <div class="card-body pt-0 pb-0 clickChart">
                        <div class="row">
                            <div class="col-4 pr-0">
                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-12 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4 pb-2"><small><b>Champion</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-1 pb-10"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>

                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-14 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-2 pb-4"><small><b>Potential Loyalist</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-2 pb-14"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>

                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-8 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-2 pb-2"><small><b>Promising</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-3 pb-12"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>

                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-12 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-2 pb-2"><small><b>Recent Customer</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-2 pb-10"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>

                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-15 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4 pb-2"><small><b>At Risk</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-2 pb-10"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>

                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-11 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-2 pb-2"><small><b>Churn</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-3 pb-4"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>

                            </div>
                            <div class="col-8 pl-0">
                                <div id="chartContainer1" class="h-100">BARCHART</div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <div class="col-xl-5">
                <div class="row justify-content-center">
                    <div class="col-4 pl-0 pr-0">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Recency
                            </div>
                            <div id="donutChart1" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                    <div class="col-4 pl-0 pr-0">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Frequency
                            </div>
                            <div id="donutChart2" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                    <div class="col-4 pl-0 pr-0">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Monetary
                            </div>
                            <div id="donutChart3" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mx-auto">
                    <div class="col-xl-2">
                        @{
                            var chrtFilter = new[] {
                    new { Text = "Jumlah SID", Value = 1 },
                    new { Text = "Tx Freq.", Value = 2 }
                    };
                        }

                        @(Html.DevExtreme().SelectBox()
                            .ID("FilterChart")
                            .DataSource(chrtFilter)
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .Value(1)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width(150))

                    </div>

                    <div class="col-xl-2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>

                    <div class="col-xl-8">

                        <p style="font-size: 12px;line-height: 24px;font-weight: normal;color: #848484;padding: 0;margin: 0;">
                            <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: #7d3b3b "></span> <b>High</b>
                            <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: #bcbcbc "></span> <b>Low</b>
                            <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: #a1928e "></span> <b>Middle</b>

                        </p>
                    </div>

                </div>

                <div class="row">
                    <div class="col-12 pl-0 pr-0">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Last Transaction Days vs Investor Value <span id="tooltipScatter" class="fa fa-info-circle info-icon float-right" data-toggle="tooltip" data-placement="auto" data-html="true" title="<p>Champion = telah berinvestasi baru-baru ini, sering, dan dengan jumlah tinggi. <b>Mereka adalah investor yang paling berharga dan paling setia, yang kemungkinan akan berinvestasi lagi</b> dan merespons dengan baik penawaran dan promosi baru.</p><br /><p>Potential Loyalist = telah berinvestasi baru-baru ini dengan frekuensi rata-rata. <b>Mereka telah menunjukkan minat dan potensi dalam berinvestasi,</b> tetapi belum membentuk pola reguler atau komitmen yang tinggi.</p><br /><p>Promising = telah berinvestasi baru-baru ini, tetapi belum menghabiskan banyak. <b>Mereka adalah investor baru atau sesekali,</b> yang mungkin membutuhkan lebih banyak waktu atau bimbingan untuk menjadi lebih percaya diri dan aktif dalam berinvestasi.</p><br /><p>At Risk Customer = <b>belum berinvestasi selama beberapa waktu, tetapi telah sering berinvestasi dan dengan jumlah tinggi di masa lalu.</b> Mereka mungkin telah beralih ke platform atau pasar lain, atau kehilangan minat atau kepercayaan diri dalam berinvestasi.</p><br /><p>Recent Customer = telah berinvestasi baru-baru ini dengan frekuensi rendah</p><br /><p>Churn = <b>sudah lama tidak berinvestasi, dan jarang berinvestasi dan dengan jumlah yang rendah.</b> Mereka mungkin tidak aktif atau tidak tertarik untuk berinvestasi, atau memiliki sumber daya atau selera risiko yang sangat rendah.</p><br />"></span>
                            </div>
                            <div id="scatterPlot1" class="card-body pt-1 pb-1 pl-1 pr-1 mx-auto">
                                SCATTER
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 pl-0">
                <div class="row mx-auto">
                    <div class="col">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                New Client vs Client
                            </div>
                            <div id="donutChart4" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mx-auto">
                    <div class="col">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Investor Origin
                            </div>
                            <div id="donutChart5" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mx-auto">
                    <div class="col">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Investor Type
                            </div>
                            <div id="donutChart6" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- The Modal  Detail -->
    <div class="modal fade" id="ModalSimpanPenggunaanData" tabindex="-1" role="document" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" style="background-color:#0066b2">
                    <h4 class="modal-title" style="text-align:left">
                        <font color="white">Pilih Penggunaan Data</font>
                    </h4>
                </div><!--Modal Header-->
                <!-- Modal body -->
                <div class="modal-body">
                    <form id="StrukturFormDetail" method="POST" action="" class="form-horizontal row-border">
                        <div class="row" style="padding: 0 10px 0 10px;">
                            @(Html.DevExtreme().SelectBox()
                                .ID("penggunaandataid")
                                .DataSource(d => d.Mvc()
                                .Controller("PenggunaanData")
                                .Area("Website")
                                .LoadAction("GetPenggunaanData")
                                .Key("value"))
                                .ValueExpr("value")
                                .DisplayExpr("text")
                                .SearchEnabled(true)
                                .Width("100%")
                                )
                        </div>
                    </form>
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" id="btnSavePenggunaanData" class="btn btn-primary" data-bs-dismiss="modal"><i class='fa fa-save'></i> Save</button>
                </div>
            </div>
        </div>
    </div>
    <!-- The Modal Detail -->
}

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>


<script>

    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip()
        createBarChart();
        createDonutChart();
        createScatterPlot();
        $('.clickChart').on('click', onClickChart);
    });

    function onClickChart(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") { 
            redirDetail(e);
        }
    }

    // DONUT START

    function createDonutChart() {
        $("#donutChart1").dxPieChart({
            dataSource: [
                { category: "High", value: 0.450 },
                { category: "Low", value: 0.300 },
                { category: "Medium", value: 0.250 }
            ],
            legend: {
                visible: false
            },
            size: {
                width: '100%',
                height: 200
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            loadingIndicator: {
                show: true,   
                text: "Loading data..."
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart2").dxPieChart({
            dataSource: [
                { category: "High", value: 0.450 },
                { category: "Low", value: 0.300 },
                { category: "Medium", value: 0.250 }
            ],
            legend: {
                visible: false
            },
            size: {
                width: '100%',
                height: 200
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            loadingIndicator: {
                show: true,
                text: "Loading data..."
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart3").dxPieChart({
            dataSource: [
                { category: "High", value: 0.450 },
                { category: "Low", value: 0.300 },
                { category: "Medium", value: 0.250 }
            ],
            legend: {
                visible: false
            },
            size: {
                width: '100%',
                height: 200
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            loadingIndicator: {
                show: true,
                text: "Loading data..."
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart4").dxPieChart({
            dataSource: [
                { category: "Client", value: 0.750 },
                { category: "New Client", value: 0.250 },
            ],
            size: {
                width: '100%',
                height: 250
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    size: 14,
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            legend: {
                orientation: 'vertical',
                itemTextPosition: 'right',
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom',
                columnCount: 3,
                paddingTopBottom: 1,
                paddingLeftRight: 1,
                rowItemSpacing: 4,
                margin: 1
            },
            loadingIndicator: {
                show: true,
                text: "Loading data..."
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart5").dxPieChart({
            dataSource: [
                { category: "Asing", value: 0.055 },
                { category: "Lokal", value: 0.945 },
            ],
            size: {
                width: '100%',
                height: 250
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    size: 14,
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            legend: {
                orientation: 'vertical',
                itemTextPosition: 'right',
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom',
                columnCount: 3,
                paddingTopBottom: 1,
                paddingLeftRight: 1,
                rowItemSpacing: 4,
                margin: 1
            },
            loadingIndicator: {
                show: true,
                text: "Loading data..."
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart6").dxPieChart({
            dataSource: [
                { category: "Individu", value: 0.945 },
                { category: "Institusi", value: 0.055 },
            ],
            size: {
                width: '100%',
                height: 250
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    size: 14,
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            legend: {
                orientation: 'vertical',
                itemTextPosition: 'right',
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom',
                columnCount: 3,
                paddingTopBottom: 1,
                paddingLeftRight: 1,
                rowItemSpacing: 4,
                margin: 1
            },
            loadingIndicator: {
                show: true,
                text: "Loading data..."
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

    }


    // DONUT END

    // VERT.BAR START

    function createBarChart() {
        $("#chartContainer1").dxChart({
            dataSource: [{
                category: "a",
                value: 0.745,
                type: "a"
            }, {
                category: "a",
                value: 0.251,
                type: "b"
            },
            {
                category: "b",
                value: 0.745,
                type: "a"
            }, {
                category: "b",
                value: 0.251,
                type: "b"
            },
            {
                category: "c",
                value: 0.745,
                type: "a"
            }, {
                category: "c",
                value: 0.251,
                type: "b"
            },
            {
                category: "d",
                value: 0.745,
                type: "a"
            }, {
                category: "d",
                value: 0.251,
                type: "b"
            },
            {
                category: "e",
                value: 0.745,
                type: "a"
            }, {
                category: "e",
                value: 0.251,
                type: "b"
            },
            {
                category: "f",
                value: 0.745,
                type: "a"
            }, {
                category: "f",
                value: 0.251,
                type: "b"
            }],
            rotated: true,
            commonSeriesSettings: {
                argumentField: "category",
                valueField: "value",
                type: "bar",
                label: {
                    visible: true,
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        position: "top",
                        precision: 2
                    }
                }
            },
            loadingIndicator: {
                show: true,
                text: "Loading data..."
            },
            seriesTemplate: {
                nameField: 'type'
            },
            palette: ["#7d3b3b", "#bcbcbc"],
            legend: {
                visible: false
            },
            argumentAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            valueAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            size: {
                height: '100%',
                width: '100%'
            }
        });
    }


    // VERT.BAR END
    
    // SCATTER START

    function createScatterPlot() {
        var data = [{
            total1: 161,
            total2: 23.8482,
            total3: 1.27,
            day1: 1,
            day2: 3,
            day3: 4,
            sid1: 5.643,
            sid2: 5.893,
            sid3: 7.232,
        }, {
            total4: 83.67,
            total5: 137.89,
            total6: 214.524,
            day4: 2,
            day5: 7,
            day6: 8,
            sid4: 5.9041,
            sid5: 6.3264,
            sid6: 4.7334,
        }];

        $('#scatterPlot1').dxChart({
            dataSource: data,
            commonSeriesSettings: {
                type: 'bubble',
            },
            argumentAxis: {
                title: 'Investor Last Transactions in Days'
            },
            valueAxis: {
                label: {
                    customizeText() {
                        return `${this.value}M`;
                    },
                },
                grid: { visible: false },
                title: 'Total Value'
            },
            background: '#00000000',
            legend: {
                position: 'inside',
                horizontalAlignment: 'right', 
                background: '#00000000',
                border: {
                    visible: true,
                    color: '#00000000'
                },
            },
            loadingIndicator: {
                show: true,
                text: "Loading data..."
            },
            tooltip: {
                enabled: true,
                customizeTooltip: function (pointInfo) {
                    return {
                        text: "<b>" + pointInfo.seriesName + "</b><br>" + 'Investor Last Transaction in Days: ' + "<b>" + pointInfo.argument + "</b><br>" + 'Total Value: ' + "<b>" + pointInfo.value + 'M' + "</b><br>"
                    };
                },
                zIndex: 10
            },
            palette: ["#87594f", "#524f4f", "#bab3a6", "#7d3b3b", "#c05a5a", "#2b1515"],
            series: [{
                name: 'At Risk',
                argumentField: 'day1',
                valueField: 'total1',
                sizeField: 'sid1',
            }, {
                name: 'Champion',
                argumentField: 'day2',
                valueField: 'total2',
                sizeField: 'sid2',
            }, {
                name: 'Churn',
                argumentField: 'day3',
                valueField: 'total3',
                sizeField: 'sid3',
            }, {
                name: 'Potential Loyalist',
                argumentField: 'day4',
                valueField: 'total4',
                sizeField: 'sid4',
            }, {
                name: 'Promising',
                argumentField: 'day5',
                valueField: 'total5',
                sizeField: 'sid5',
            }, {
                name: 'Recent Customer',
                argumentField: 'day6',
                valueField: 'total6',
                sizeField: 'sid6',
            }],
            onSeriesClick(e) {
                const series = e.target;
                if (series.isVisible()) {
                    series.hide();
                } else {
                    series.show();
                }
            },
            size: {
                height: 500,
                width: '100%'
            }
        });
    }

    // SCATTER END



    $(function () {
        const startDate = $("#PeriodeAwal").dxDateBox({
            onValueChanged: function (e) {
                endDate.option("min", e.value);
            }
        }).dxDateBox("instance");

        $("#PeriodeAwal").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Tanggal] harus dipilih" }]
        })
    });

    $(function () {
        $("#penggunaandataid").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Penggunaan Data] harus dipilih" }]
        })
    });

    $(function () {
        $("#namaPEid").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Nama PE] harus dipilih" }]
        })
    });

    $(window).on('load', function () {
        $("#ModalSimpanPenggunaanData").modal("show");
    });

    $("#btnSavePenggunaanData").click(function () {
        let penggunaandataid = $("#penggunaandataid").dxSelectBox("instance").option("value");

        if (penggunaandataid == null) {
            alert("Silahkan Pilih Tujuan Penggunaan Data");
            return false;
        } else {
            $.ajax({
                url: '@Url.Action("SimpanPenggunaanData", "BasisInvestor")',
                data: { id: penggunaandataid },
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.success == true) {
                        //alert(data.message);
    @* waitingDialog.hide(); *@
                            $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Success !";
                    }
                    else if (data.success == false) {
    @*  waitingDialog.hide(); *@
                            alert(data.message);
                        $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Failed !";
                    }
                }
            });
        }
    });

    function onSelectionChanged(e) {
        if (e.addedItems && e.addedItems.length > 0) {
            // Get the input element of the ComboBox
            var inputElement = e.component.$element().find("input").first();

            // Clear the search text
            if (inputElement.length) {
                inputElement.val("");
            }
        }
    }


    function redirDetail(e) {
        let periodeAwal = $("#Periode").dxDateBox("instance").option("value");
        let periode = periodeAwal.getFullYear() + '-' + String(periodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(periodeAwal.getDate()).padStart(2, '0');
        let PE = $("#namaPEid").dxSelectBox("instance").option("value");
        if (periodeAwal === null || PE === null) {
            alert("Periode Data dan Nama PE Harus Diisi!");
        } else {
            window.open('@Url.Action("Detail", "BasisInvestor")?pe=' + PE + '&periode=' + periode);
        }
    }

    var waitingDialog = (function ($) {

        // Creating modal dialog's DOM
        var $dialog = $(
            '<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true" style="padding-top:15%; overflow-y:visible;">' +
            '<div class="modal-dialog modal-m">' +
            '<div class="modal-content">' +
            '<div class="modal-header"><h3 style="margin:0;"></h3></div>' +
            '<div class="modal-body">' +
            '<div class="progress progress-striped active" style="margin-bottom:0;"><div class="progress-bar" style="width: 100%"></div></div>' +
            '</div>' +
            '</div></div></div>');

        return {
            show: function (message, options) {
                // Assigning defaults
                var settings = $.extend({
                    dialogSize: 'm',
                    progressType: ''
                }, options);
                if (typeof message === 'undefined') {
                    message = 'Loading';
                }
                if (typeof options === 'undefined') {
                    options = {};
                }
                // Configuring dialog
                $dialog.find('.modal-dialog').attr('class', 'modal-dialog').addClass('modal-' + settings.dialogSize);
                $dialog.find('.progress-bar').attr('class', 'progress-bar');
                if (settings.progressType) {
                    $dialog.find('.progress-bar').addClass('progress-bar-' + settings.progressType);
                }
                $dialog.find('h3').text(message);
                // Opening dialog
                $dialog.modal();
            },
            /**
                * Closes dialog
                */
            hide: function () {
                $dialog.modal('hide');
            }
        }
    })(jQuery);

    function loadChartData(id, data) {
        var selector = "#" + id;
        $(selector).dxChart("option", "dataSource", data);
    }

    function onButtonFilterClicked(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") {
            let tempPeriodeAwal = $("#Periode").dxDateBox("instance").option("value");
            let namaPE = $("#namaPEid").dxSelectBox("instance").option("value");
            let invType = $("#InvstType").dxSelectBox("instance").option("value");
            let invOrigin = $("#InvstOrigin").dxSelectBox("instance").option("value");
            let inpRange = $("#InpRange").dxSelectBox("instance").option("value");
            let market = $("#Market").dxSelectBox("instance").option("value");
            let filterChart = $("#FilterChart").dxSelectBox("instance").option("value");

            let periodeAwal = null;
            if (tempPeriodeAwal != null) {
                periodeAwal = tempPeriodeAwal.getFullYear() + '-' + String(tempPeriodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAwal.getDate()).padStart(2, '0');
            }

            var totalClient = null;
            var txInvFreq = null;
            var chartDatas = [];

            const vertchart = $("#chartContainer1").dxChart("instance");

            vertchart.showLoadingIndicator();

            $('#totalClients').text("-");
            $('#activeClient').text("-");
            $('#trxFreq').text("-");
            $('#tradedValue').text("-");
            $('#clientLiquidAmt').text("-");

            const piechart1 = $("#donutChart1").dxPieChart("instance");
            const piechart2 = $("#donutChart2").dxPieChart("instance");
            const piechart3 = $("#donutChart3").dxPieChart("instance");
            const piechart4 = $("#donutChart4").dxPieChart("instance");
            const piechart5 = $("#donutChart5").dxPieChart("instance");
            const piechart6 = $("#donutChart6").dxPieChart("instance");

            piechart1.showLoadingIndicator();
            piechart2.showLoadingIndicator();
            piechart3.showLoadingIndicator();
            piechart4.showLoadingIndicator();
            piechart5.showLoadingIndicator();
            piechart6.showLoadingIndicator();

            const scatterplot = $('#scatterPlot1').dxChart("instance");;
            scatterplot.showLoadingIndicator();

            function loadAllData() {
                return $.ajax({
                    url: '@Url.Action("GetDatasAll", "BasisInvestor")',
                    data: { periodeAwal: periodeAwal, namaPE: namaPE, invType: invType, invOrigin: invOrigin, inRange: inpRange, market: market, type: parseInt(filterChart) },
                    dataType: "json",
                    type: "POST",
                    success: function (response) {
                        $('#totalClients').text(new Intl.NumberFormat("id").format(response.totalClients));
                        $('#activeClient').text(new Intl.NumberFormat("id").format(response.activeClients));
                        $('#trxFreq').text(new Intl.NumberFormat("id").format(response.trxFreq));
                        $('#tradedValue').text(new Intl.NumberFormat("id").format(response.tradedValue));
                        $('#clientLiquidAmt').text(new Intl.NumberFormat("id").format(response.clientLiquidAmount));

                        var segments1 = response.segmentsITF;
                        var segments2 = response.segmentsTC;
                        var segmentsCategory = ["a", "b", "c", "d", "e", "f"];

                        segments1.forEach((val, index) => {
                            var data1 = {
                                category: segmentsCategory[index],
                                value: val,
                                type: "a"
                            };

                            chartDatas.push(data1);

                            var data2 = {
                                category: segmentsCategory[index],
                                value: segments2[index],
                                type: "b"
                            };

                            chartDatas.push(data2);
                        });

                        vertchart.option("dataSource", chartDatas);
                        vertchart.hideLoadingIndicator();

                        var dataR = [
                            { category: "High", value: response.R[0] },
                            { category: "Low", value: response.R[2] },
                            { category: "Medium", value: response.R[1] }
                        ];

                        var dataF = [
                            { category: "High", value: response.F[0] },
                            { category: "Low", value: response.F[2] },
                            { category: "Medium", value: response.F[1] }
                        ];

                        var dataM = [
                            { category: "High", value: response.M[0] },
                            { category: "Low", value: response.M[2] },
                            { category: "Medium", value: response.M[1] }
                        ];

                        piechart1.option("dataSource", dataR);
                        piechart1.hideLoadingIndicator();
                        piechart2.option("dataSource", dataF);
                        piechart2.hideLoadingIndicator();
                        piechart3.option("dataSource", dataM);
                        piechart3.hideLoadingIndicator();

                        var dataCVNC = [
                            { category: "Client", value: response.clientVNewClient[0] },
                            { category: "New Client", value: response.clientVNewClient[1] }
                        ];

                        piechart4.option("dataSource", dataCVNC);
                        piechart4.hideLoadingIndicator();

                        var dataInvOrigin = [
                            { category: "Asing", value: response.investorOrigin[0] },
                            { category: "Lokal", value: response.investorOrigin[1] }
                        ];

                        piechart5.option("dataSource", dataInvOrigin);
                        piechart5.hideLoadingIndicator();

                        var dataInvType = [
                             { category: "Individu", value: response.investorType[0] },
                             { category: "Institusi", value: response.investorType[1] }
                         ];

                        piechart6.option("dataSource", dataInvType);
                        piechart6.hideLoadingIndicator();

                        var dataScatter = [{
                            total1: Number(response.scatterData[0].med_inv_tot_val),
                            total2: Number(response.scatterData[1].med_inv_tot_val),
                            total3: Number(response.scatterData[2].med_inv_tot_val),
                            total4: Number(response.scatterData[3].med_inv_tot_val),
                            total5: Number(response.scatterData[4].med_inv_tot_val),
                            total6: Number(response.scatterData[5].med_inv_tot_val),
                            day1: Number(response.scatterData[0].med_inv_days),
                            day2: Number(response.scatterData[1].med_inv_days),
                            day3: Number(response.scatterData[2].med_inv_days),
                            day4: Number(response.scatterData[3].med_inv_days),
                            day5: Number(response.scatterData[4].med_inv_days),
                            day6: Number(response.scatterData[5].med_inv_days),
                            sid1: Number(response.scatterData[0].log10_sid),
                            sid2: Number(response.scatterData[1].log10_sid),
                            sid3: Number(response.scatterData[2].log10_sid),
                            sid4: Number(response.scatterData[3].log10_sid),
                            sid5: Number(response.scatterData[4].log10_sid),
                            sid6: Number(response.scatterData[5].log10_sid)
                        }];

                        scatterplot.option("dataSource", dataScatter);
                        scatterplot.hideLoadingIndicator();

                    }
                });
            }

            (function () {
                loadAllData();
            }());
        }
    }

    
</script>

<style type="text/css">
    .mandatory {
        color: red;
    }

    .card {
        margin: 5px;
        text-align: center;
    }

    .small-card-body {
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

</style>
