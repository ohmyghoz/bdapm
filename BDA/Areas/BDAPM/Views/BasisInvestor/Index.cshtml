@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
    string reportId = "Segmentation_Basis_Investor";
    var p = (string[])ViewBag.period;
    var maxItems = db.GetSetting("LimitFilterLJK");
}

@inject BDA.DataModel.DataEntities db


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <style>
        .info-icon {
            color: white;
            vertical-align: middle
        }

        .tooltip-inner {
            text-align: justify;
            max-width: 640px;
            width: 640px;
        }

        .card-header {
            background-color: #a01905 !important;
        }

        #no-axes .dxc-axes-group {
            display: none;
        }

    </style>

    <div class="card card-default">
        @*filter*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">
                    <div class="form-group ml-3">
                        @* <button type="button" id="btnDetailCluster" class="btn btn-danger">Detail Cluster MKBD</button> *@
                        <input type="button" id="btnBasisInvestor" class="btn btn-danger" value="Basis Investor" onclick="location.href='@Url.Action("/", "BasisInvestor")'" />
                    </div>&nbsp;&nbsp;
                    <div class="form-group">
                        <input type="button" id="btnDetailBI" class="btn btn-danger" value="Detail Basis Investor" onclick="location.href='@Url.Action("Detail", "BasisInvestor")'" />
                    </div>&nbsp;&nbsp;
                    <div class="form-group">
                        <input type="button" id="btnSumTxSID" class="btn btn-danger" value="Summary Transaction SID" onclick="location.href='@Url.Action("SumTxSID", "BasisInvestor")'" />
                    </div>&nbsp;&nbsp;
                </div>
                <div class="row">

                    <div class="col-lg-2 form-group">
                        <label>Periode<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("Periode")
                            .DisplayFormat("MMM yyyy")
                            //.Value(periodeAwal1 == null ? DateTime.Now : periodeAwal1)
                            .Value(DateTime.Now)
                            .Max(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-2 form-group">
                        <label>PE@* <span class="mandatory">*</span> *@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("namaPEid")
                            .DataSource(d => d.Mvc()
                            .Controller("BasisInvestor")
                            .Area("BDAPM")
                            .LoadAction("GetNamaPE")
                            .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .SearchEnabled(true)
                            .Width("100%")
                            )
                    </div>

                    @{
                        var invType = new string [] { "Individu", "Institusi" };
                    }

                    <div class="col-lg-2 form-group">
                        <label>Investor Type@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("InvstType")
                            .DataSource(invType)
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>

                    @{
                        var invOrigin = new[] { "Asing", "Lokal" };
                    }

                    <div class="col-lg-2 form-group">
                        <label>Investor Origin@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("InvstOrigin")
                            .DataSource(invOrigin)
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>

                    @{
                        var inpRange = new[] { 
                            new { Text = "1 Bulan", Value = "1" },
                            new { Text = "6 Bulan", Value = "6" }, 
                            new { Text = "12 Bulan", Value = "12" }
                        };
                    }

                    <div class="col-lg-2 form-group">
                        <label>Input Range@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("InpRange")
                            .DataSource(inpRange)
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>

                    @{
                        var market = new[] { "Burse" };
                    }

                    <div class="col-lg-2 form-group">
                        <label>Market@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Market")
                            .DataSource(market)
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>

                </div>

                <div class="float-left">
                    @(Html.DevExtreme().Button()
                        .ID("Filter")
                        .Type(ButtonType.Default)
                        .Text("Tampilkan")
                        .OnClick("onButtonFilterClicked")
                        .ValidationGroup("Filter"))
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-12 col-sm-6 col-md-4 col-lg-2 d-flex align-items-stretch">
                <div class="card text-center">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Total Clients
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="totalClients" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>

            <div class="col-12 col-sm-6 col-md-4 col-lg-2 d-flex align-items-stretch">
                <div class="card text-center">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Active Client
                    </div> 
                    <div class="small-card-body clickChart">
                        <p id="activeClient" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>

            <div class="col-12 col-sm-6 col-md-4 col-lg-2 d-flex align-items-stretch">
                <div class="card text-center">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Transaction Frequency
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="trxFreq" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>

            <div class="col-12 col-sm-6 col-md-4 col-lg-2 d-flex align-items-stretch">
                <div class="card text-center">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Traded Value
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="tradedValue" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>

            <div class="col-12 col-sm-6 col-md-4 col-lg-2 d-flex align-items-stretch">
                <div class="card text-center">
                    <div class="card-header text-white d-flex align-items-center justify-content-center h-100">
                        Client Liquid Amount
                    </div>
                    <div class="small-card-body clickChart">
                        <p id="clientLiquidAmt" class="card-text font-weight-bold">-</p>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="row justify-content-center">
            <div id="no-axes" class="col-xl-4">
                <div class="card text-center">
                    <div class="card-header text-white h-100">
                        Presentase By Segment <span id="tooltipGraph" class="fa fa-info-circle info-icon float-right" data-toggle="tooltip" data-placement="auto" data-html="true" title="<p><b>Investor Total Value adalah nilai tengah atau median dari keseluruhan nasabah yang termasuk kategori nasabah tersebut (bukan melainkan total transaksi secara keseluruhan)</b></p>"></span>
                    </div>

                    <div class="card-body pt-0 pb-0 clickChart">
                        <div class="row">
                            <div class="col-6 pt-0 pb-0 ">
                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-14 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4 pb-4"><small><b>Champion</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>
                            </div>
                            <div class="col-6">
                                <div id="chartContainer1">BARCHART</div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body pt-0 pb-0 clickChart">
                        <div class="row">
                            <div class="col-6">
                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-14 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4 pb-4"><small><b>Potential Loyalist</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>
                            </div>
                            <div class="col-6">
                                <div id="chartContainer2">BARCHART</div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body pt-0 pb-0 clickChart">
                        <div class="row">
                            <div class="col-6">
                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-14 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4 pb-4"><small><b>Promising</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>
                            </div>
                            <div class="col-6">
                                <div id="chartContainer3">BARCHART</div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body pt-0 pb-0 clickChart">
                        <div class="row">
                            <div class="col-6">
                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-14 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4 pb-4"><small><b>Recent Customer</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>
                            </div>
                            <div class="col-6">
                                <div id="chartContainer4">BARCHART</div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body pt-0 pb-0 clickChart">
                        <div class="row">
                            <div class="col-6">
                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-14 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4 pb-4"><small><b>At Risk</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>
                            </div>
                            <div class="col-6">
                                <div id="chartContainer5">BARCHART</div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body pt-0 pb-0 clickChart">
                        <div class="row">
                            <div class="col-6">
                                <div class="row">
                                    <div class="col-12 text-left text-nowrap mx-auto pt-14 pb-2"><small>% Transaction Freq</small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4 pb-4"><small><b>Churn</b></small></div>
                                    <br /><br />
                                    <div class="col-12 text-left text-nowrap mx-auto pt-4"><small>% Total Client</small></div>
                                    <br /><br />
                                </div>
                            </div>
                            <div class="col-6">
                                <div id="chartContainer6">BARCHART</div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <div class="col-xl-5">
                <div class="row">
                    <div class="col-xs-4">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Recency
                            </div>
                            <div id="donutChart1" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Frequency
                            </div>
                            <div id="donutChart2" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Monetary
                            </div>
                            <div id="donutChart3" class="card-body pt-1 pb-1 pl-1 pr-1 clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mx-auto">
                    <div class="col-xl-2">
                        @{
                            var chrtFilter = new[] {
                    new { Text = "Jumlah SID", Value = 1 },
                    new { Text = "Tx Freq.", Value = 2 }
                    };
                        }

                        @(Html.DevExtreme().SelectBox()
                            .ID("FilterChart")
                            .DataSource(chrtFilter)
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                            .Value("sid")
                            .OnSelectionChanged("onSelectionChanged")
                            .OnInitialized("initFilterPie")
                            .Width(150))

                    </div>

                    <div class="col-xl-2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>

                    <div class="col-xl-8">

                        <p style="font-size: 12px;line-height: 24px;font-weight: normal;color: #848484;padding: 0;margin: 0;">
                            <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: #7d3b3b "></span> <b>High</b>
                            <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: #bcbcbc "></span> <b>Low</b>
                            <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: #a1928e "></span> <b>Middle</b>
                            
                        </p>
                    </div>
                    
                </div>

                <div class="row">
                    <div class="col-xl-12">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Last Transaction Days vs Investor Value <span id="tooltipScatter" class="fa fa-info-circle info-icon float-right" data-toggle="tooltip" data-placement="auto" data-html="true" title="<p>Champion = telah berinvestasi baru-baru ini, sering, dan dengan jumlah tinggi. <b>Mereka adalah investor yang paling berharga dan paling setia, yang kemungkinan akan berinvestasi lagi</b> dan merespons dengan baik penawaran dan promosi baru.</p><br /><p>Potential Loyalist = telah berinvestasi baru-baru ini dengan frekuensi rata-rata. <b>Mereka telah menunjukkan minat dan potensi dalam berinvestasi,</b> tetapi belum membentuk pola reguler atau komitmen yang tinggi.</p><br /><p>Promising = telah berinvestasi baru-baru ini, tetapi belum menghabiskan banyak. <b>Mereka adalah investor baru atau sesekali,</b> yang mungkin membutuhkan lebih banyak waktu atau bimbingan untuk menjadi lebih percaya diri dan aktif dalam berinvestasi.</p><br /><p>At Risk Customer = <b>belum berinvestasi selama beberapa waktu, tetapi telah sering berinvestasi dan dengan jumlah tinggi di masa lalu.</b> Mereka mungkin telah beralih ke platform atau pasar lain, atau kehilangan minat atau kepercayaan diri dalam berinvestasi.</p><br /><p>Recent Customer = telah berinvestasi baru-baru ini dengan frekuensi rendah</p><br /><p>Churn = <b>sudah lama tidak berinvestasi, dan jarang berinvestasi dan dengan jumlah yang rendah.</b> Mereka mungkin tidak aktif atau tidak tertarik untuk berinvestasi, atau memiliki sumber daya atau selera risiko yang sangat rendah.</p><br />"></span>
                            </div>
                            <div id="scatterPlot1" class="card-body pt-1 pb-1 pl-1 pr-1 mx-auto">
                                SCATTER
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-3">
                <div class="row mx-auto">
                    <div class="col-xs-12 mx-auto">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                New Client vs Client
                            </div>
                            <div id="donutChart4" class="card-body pt-1 pb-1 pl-1 pr-1 mx-auto clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mx-auto">
                    <div class="col-xs-12 mx-auto">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Investor Origin
                            </div>
                            <div id="donutChart5" class="card-body pt-1 pb-1 pl-1 pr-1 mx-auto clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mx-auto">
                    <div class="col-xs-12 mx-auto">
                        <div class="card text-center">
                            <div class="card-header text-white h-100">
                                Investor Type
                            </div>
                            <div id="donutChart6" class="card-body pt-1 pb-1 pl-1 pr-1 mx-auto clickChart">
                                DONUT
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
        
        <!-- The Modal  Detail -->
        <div class="modal fade" id="ModalSimpanPenggunaanData" tabindex="-1" role="document" aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#0066b2">
                        <h4 class="modal-title" style="text-align:left">
                            <font color="white">Pilih Penggunaan Data</font>
                        </h4>
                    </div><!--Modal Header-->
                    <!-- Modal body -->
                    <div class="modal-body">
                        <form id="StrukturFormDetail" method="POST" action="" class="form-horizontal row-border">
                            <div class="row" style="padding: 0 10px 0 10px;">
                                @(Html.DevExtreme().SelectBox()
                                    .ID("penggunaandataid")
                                    .DataSource(d => d.Mvc()
                                    .Controller("PenggunaanData")
                                    .Area("Website")
                                    .LoadAction("GetPenggunaanData")
                                    .Key("value"))
                                    .ValueExpr("value")
                                    .DisplayExpr("text")
                                    .SearchEnabled(true)
                                    .Width("100%")
                                    )
                            </div>
                        </form>
                    </div>
                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" id="btnSavePenggunaanData" class="btn btn-primary" data-bs-dismiss="modal"><i class='fa fa-save'></i> Save</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- The Modal Detail -->

}

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>


<script>
    
    $(function () {

        $('[data-toggle="tooltip"]').tooltip()
        createBarChart();
        createDonutChart();
        createScatterPlot();
        $('.clickChart').on('click', onClickChart);

    });


    function initFilterPie(e) {
        const v = e.component.option("Value");
        if (v === null) {
            e.component.option("Value", 1);
        }
    }

    function onClickChart() {
        alert("CLICKED!");
    }

    function formatNumber(value) {
        return 
    }
    
    // DONUT START

    function createDonutChart() {
        $("#donutChart1").dxPieChart({
            dataSource: [
                { category: "High", value: 0.450 },
                { category: "Low", value: 0.300 },
                { category: "Medium", value: 0.250 }
            ],
            legend: {
                visible: false
            },
            size: {
                width: 110,
                height: 200
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart2").dxPieChart({
            dataSource: [
                { category: "High", value: 0.450 },
                { category: "Low", value: 0.300 },
                { category: "Medium", value: 0.250 }
            ],
            legend: {
                visible: false
            },
            size: {
                width: 110,
                height: 200
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart3").dxPieChart({
            dataSource: [
                { category: "High", value: 0.450 },
                { category: "Low", value: 0.300 },
                { category: "Medium", value: 0.250 }
            ],
            legend: {
                visible: false
            },
            size: {
                width: 110,
                height: 200
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart4").dxPieChart({
            dataSource: [
                { category: "Client", value: 0.750 },
                { category: "New Client", value: 0.250 },
            ],
            size: {
                width: 170,
                height: 250
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    size: 14,
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            legend: {
                orientation: 'vertical',
                itemTextPosition: 'right',
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom',
                columnCount: 3,
                paddingTopBottom: 1,
                paddingLeftRight: 1,
                rowItemSpacing: 4,
                margin: 1
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart5").dxPieChart({
            dataSource: [
                { category: "Asing", value: 0.055 },
                { category: "Lokal", value: 0.945 },
            ],
            size: {
                width: 170,
                height: 250
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    size: 14,
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            legend: {
                orientation: 'vertical',
                itemTextPosition: 'right',
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom',
                columnCount: 3,
                paddingTopBottom: 1,
                paddingLeftRight: 1,
                rowItemSpacing: 4,
                margin: 1
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });

        $("#donutChart6").dxPieChart({
            dataSource: [
                { category: "Individu", value: 0.945 },
                { category: "Institusi", value: 0.055 },
            ],
            size: {
                width: 170,
                height: 250
            },
            innerRadius: 0.6,
            diameter: 0.9,
            palette: ["#7d3b3b", "#bcbcbc", "#a1928e"],
            series: {
                argumentField: "category",
                valueField: "value",
                type: "donut",
                label: {
                    visible: true,
                    position: "inside",
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    size: 14,
                    format: {
                        type: "percent",
                        precision: 2
                    }
                }
            },
            legend: {
                orientation: 'vertical',
                itemTextPosition: 'right',
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom',
                columnCount: 3,
                paddingTopBottom: 1,
                paddingLeftRight: 1,
                rowItemSpacing: 4,
                margin: 1
            },
            margin: {
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
            }
        });
    
    }


    // DONUT END

    // VERT.BAR START

    function createBarChart() {
        $("#chartContainer1").dxChart({
            dataSource: [{
                category: "a",
                value: 0.745,
                type: "a"
            }, {
                category: "a",
                value: 0.251,
                type: "b"
            }],
            rotated: true,
            commonSeriesSettings: {
                argumentField: "category",
                valueField: "value",
                type: "bar",
                label: {
                    visible: true,
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        position: "top",
                        precision: 2
                    }
                }
            },
            seriesTemplate: {
                nameField: 'type'
            },
            palette: ["#7d3b3b", "#bcbcbc"],
            legend: {
                visible: false
            },
            argumentAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            valueAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            size: {
                height: 200,
                width: '100%'
            }
        });

        $("#chartContainer2").dxChart({
            dataSource: [{
                category: "a",
                value: 0.745,
                type: "a"
            }, {
                category: "a",
                value: 0.251,
                type: "b"
            }],
            rotated: true,
            commonSeriesSettings: {
                argumentField: "category",
                valueField: "value",
                type: "bar",
                label: {
                    visible: true,
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        position: "top",
                        precision: 2
                    }
                }
            },
            seriesTemplate: {
                nameField: 'type'
            },
            palette: ["#7d3b3b", "#bcbcbc"],
            legend: {
                visible: false
            },
            argumentAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            valueAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            size: {
                height: 200,
                width: '100%'
            }
        });

        $("#chartContainer3").dxChart({
            dataSource: [{
                category: "a",
                value: 0.745,
                type: "a"
            }, {
                category: "a",
                value: 0.251,
                type: "b"
            }],
            rotated: true,
            commonSeriesSettings: {
                argumentField: "category",
                valueField: "value",
                type: "bar",
                label: {
                    visible: true,
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        position: "top",
                        precision: 2
                    }
                }
            },
            seriesTemplate: {
                nameField: 'type'
            },
            palette: ["#7d3b3b", "#bcbcbc"],
            legend: {
                visible: false
            },
            argumentAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            valueAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            size: {
                height: 200,
                width: '100%'
            }
        });

        $("#chartContainer4").dxChart({
            dataSource: [{
                category: "a",
                value: 0.745,
                type: "a"
            }, {
                category: "a",
                value: 0.251,
                type: "b"
            }],
            rotated: true,
            commonSeriesSettings: {
                argumentField: "category",
                valueField: "value",
                type: "bar",
                label: {
                    visible: true,
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        position: "top",
                        precision: 2
                    }
                }
            },
            seriesTemplate: {
                nameField: 'type'
            },
            palette: ["#7d3b3b", "#bcbcbc"],
            legend: {
                visible: false
            },
            argumentAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            valueAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            size: {
                height: 200,
                width: '100%'
            }
        });

        $("#chartContainer5").dxChart({
            dataSource: [{
                category: "a",
                value: 0.745,
                type: "a"
            }, {
                category: "a",
                value: 0.251,
                type: "b"
            }],
            rotated: true,
            commonSeriesSettings: {
                argumentField: "category",
                valueField: "value",
                type: "bar",
                label: {
                    visible: true,
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        position: "top",
                        precision: 2
                    }
                }
            },
            seriesTemplate: {
                nameField: 'type'
            },
            palette: ["#7d3b3b", "#bcbcbc"],
            legend: {
                visible: false
            },
            argumentAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            valueAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            size: {
                height: 200,
                width: '100%'
            }
        });

        $("#chartContainer6").dxChart({
            dataSource: [{
                category: "a",
                value: 0.745,
                type: "a"
            }, {
                category: "a",
                value: 0.251,
                type: "b"
            }],
            rotated: true,
            commonSeriesSettings: {
                argumentField: "category",
                valueField: "value",
                type: "bar",
                label: {
                    visible: true,
                    backgroundColor: "none",
                    font: {
                        color: "#000000",
                        weight: 650
                    },
                    format: {
                        type: "percent",
                        position: "top",
                        precision: 2
                    }
                }
            },
            seriesTemplate: {
                nameField: 'type'
            },
            palette: ["#7d3b3b", "#bcbcbc"],
            legend: {
                visible: false
            },
            argumentAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            valueAxis: {
                grid: { visible: false },
                tick: { visible: false },
                label: { visible: false }
            },
            size: {
                height: 200,
                width: '100%'
            }
        });
    }


    // VERT.BAR END

    // SCATTER START

    function createScatterPlot() {
        var data = [{
            total1: 9.5,
            total2: 168.8,
            total3: 127.2,
            day1: 2.4,
            day2: 8.8,
            day3: 40.1,
            sid1: 25.4,
            sid2: 5.3,
            sid3: 31.6,
        }, {
            total4: 82.8,
            total5: 91.7,
            total6: 90.8,
            day4: 21.9,
            day5: 4.6,
            day6: 8.0,
            sid4: 26.7,
            sid4: 5.4,
            sid4: 8.9,
        }, {
            total4: 16.7,
            total5: 80.7,
            total6: 21.1,
            day4: 3.8,
            day5: 7.0,
            day6: 2.7,
            sid4: 22.8,
            sid5: 8.4,
            sid6: 12.9,
        }, {
            total1: 62.8,
            total2: 52.4,
            total3: 96.7,
            day1: 14.4,
            day2: 4.0,
            day3: 5.9,
            sid1: 23.0,
            sid2: 7.8,
            sid3: 6.1,
        }];

        $('#scatterPlot1').dxChart({
            dataSource: data,
            commonSeriesSettings: {
                type: 'bubble',
            },
            argumentAxis: {
                title: 'Total Value'
            },
            valueAxis: {
                label: {
                    customizeText() {
                        return `${this.value}M`;
                    },
                },
                grid: { visible: false },
                title: 'Investor Last Transactions in Days'
            },
            legend: {
                position: 'inside',
                horizontalAlignment: 'right',
                border: {
                    visible: false,
                },
            },
            palette: ["#87594f", "#524f4f", "#bab3a6", "#7d3b3b", "#c05a5a", "#2b1515"],
            series: [{
                name: 'At Risk',
                argumentField: 'total1',
                valueField: 'day1',
                sizeField: 'sid1',
            }, {
                name: 'Champion',
                argumentField: 'total2',
                valueField: 'day2',
                sizeField: 'sid2',
            }, {
                name: 'Churn',
                argumentField: 'total3',
                valueField: 'day3',
                sizeField: 'sid3',
            }, {
                name: 'Potential Loyalist',
                argumentField: 'total4',
                valueField: 'day4',
                sizeField: 'sid4',
            }, {
                name: 'Promising',
                argumentField: 'total5',
                valueField: 'day5',
                sizeField: 'sid5',
            }, {
                name: 'Recent Customer',
                argumentField: 'total6',
                valueField: 'day6',
                sizeField: 'sid6',
            }],
            onSeriesClick(e) {
                const series = e.target;
                if (series.isVisible()) {
                    series.hide();
                } else {
                    series.show();
                }
            },
            size: {
                height: 500,
                width: 360
            }
        });
    }

    // SCATTER END

    
    
    $(function () {
        const startDate = $("#PeriodeAwal").dxDateBox({
            onValueChanged: function (e) {
                endDate.option("min", e.value);
            }
        }).dxDateBox("instance");

        $("#PeriodeAwal").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Tanggal] harus dipilih" }]
        })
    });

    $(function () {
        $("#penggunaandataid").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Penggunaan Data] harus dipilih" }]
        })
    });

@*     $(function () {
        $("#namaPEid").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Nama PE] harus dipilih" }]
        })
    }); *@

    $(window).on('load', function () {
        $("#ModalSimpanPenggunaanData").modal("show");
    });

    $("#btnSavePenggunaanData").click(function () {
        let penggunaandataid = $("#penggunaandataid").dxSelectBox("instance").option("value");

        if (penggunaandataid == null) {
            alert("Silahkan Pilih Tujuan Penggunaan Data");
            return false;
        } else {
            $.ajax({
                url: '@Url.Action("SimpanPenggunaanData", "SegmentationSummaryClusterMKBD")',
                data: { id: penggunaandataid },
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.success == true) {
                        //alert(data.message);
    @* waitingDialog.hide(); *@
                            $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Success !";
                    }
                    else if (data.success == false) {
    @*  waitingDialog.hide(); *@
                            alert(data.message);
                        $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Failed !";
                    }
                }
            });
        }
    });

    function ExportToPdf() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportIndex", "MaxMinOverdue")",
            success: function (response) {
                if (response.result == "Success") {
                    const doc = new jsPDF({
                        orientation: "landscape",
                        unit: "cm",
                        format: [21, 60]
                    });
                    var dataGrid = $("#grid1").dxDataGrid("instance");
                    var fileName = "MaxMinOverdue_" + new Date().toISOString().slice(0, 10) + ".pdf";
                    doc.setFontSize("6")
                    //var keys = $("#grid1").dxDataGrid("getSelectedRowsData")
                    //console.log(keys)
                    DevExpress.pdfExporter.exportDataGrid({
                        jsPDFDocument: doc,
                        component: dataGrid,
                        keepColumnWidths: true
                        //selectedRowsOnly: true
                    }).then(function () {
                        doc.save(fileName);
                    });
                }
            }
        });
    }

    function ExportToPdf2() {
        var dataGrid = $("#grid1").dxDataGrid("instance");
        dataGrid.option("onExporting", function (e) { });
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportPDF", "SegmentationSummaryClusterMKBD")",
                data: fd,
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("File", "SegmentationSummaryClusterMKBD")"
            });
            e.cancel = true;
        });

        dataGrid.exportToExcel();
    }

    function onSelectionChanged(e) {
        if (e.addedItems.length > 0) {
            e.component.field().val(""); // Clears the search text. However, search filter is only applied to the widget after focus is lost in the input element
        }
    }


    function Detail(e) {
        var keys = e.row.key;
        if (typeof (keys) !== "undefined" && typeof (keys) !== null) {
            window.open('@Url.Action("Detail", "SegmentationSummaryClusterMKBD")?id=' + keys.toString());
        }
    }

    var waitingDialog = (function ($) {

        // Creating modal dialog's DOM
        var $dialog = $(
            '<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true" style="padding-top:15%; overflow-y:visible;">' +
            '<div class="modal-dialog modal-m">' +
            '<div class="modal-content">' +
            '<div class="modal-header"><h3 style="margin:0;"></h3></div>' +
            '<div class="modal-body">' +
            '<div class="progress progress-striped active" style="margin-bottom:0;"><div class="progress-bar" style="width: 100%"></div></div>' +
            '</div>' +
            '</div></div></div>');

        return {
            show: function (message, options) {
                // Assigning defaults
                var settings = $.extend({
                    dialogSize: 'm',
                    progressType: ''
                }, options);
                if (typeof message === 'undefined') {
                    message = 'Loading';
                }
                if (typeof options === 'undefined') {
                    options = {};
                }
                // Configuring dialog
                $dialog.find('.modal-dialog').attr('class', 'modal-dialog').addClass('modal-' + settings.dialogSize);
                $dialog.find('.progress-bar').attr('class', 'progress-bar');
                if (settings.progressType) {
                    $dialog.find('.progress-bar').addClass('progress-bar-' + settings.progressType);
                }
                $dialog.find('h3').text(message);
                // Opening dialog
                $dialog.modal();
            },
            /**
                * Closes dialog
                */
            hide: function () {
                $dialog.modal('hide');
            }
        }
    })(jQuery);

    function loadChartData(id, data) {
        var selector = "#" + id;
        $(selector).dxChart("option", "dataSource", data);
    }


    function onButtonFilterClicked(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") {
            let tempPeriodeAwal = $("#Periode").dxDateBox("instance").option("value");
            let namaPE = $("#namaPEid").dxSelectBox("instance").option("value");
            let invType = $("#InvstType").dxSelectBox("instance").option("value");
            let invOrigin = $("#InvstOrigin").dxSelectBox("instance").option("value");
            let inpRange = $("#InpRange").dxSelectBox("instance").option("value");
            let market = $("#Market").dxSelectBox("instance").option("value");
            let filterChart = $("#FilterChart").dxSelectBox("instance").option("value");
            
            let fruits = [{
                category: "a",
                value: 0.23,
                type: "a"
            }, {
                category: "a",
                value: 0.77,
                type: "b"
            }];

            $("#chartContainer1").dxChart("option", "dataSource", fruits);

            let periodeAwal = null;
            if (tempPeriodeAwal != null) {
                periodeAwal = tempPeriodeAwal.getFullYear() + '-' + String(tempPeriodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAwal.getDate()).padStart(2, '0');
            }

            let totalClient = null;
            let txInvFreq = null;

            $.ajax({
                url: '@Url.Action("GetCardTotalClients", "BasisInvestor")',
                data: { periodeAwal: periodeAwal, namaPE: namaPE, invType: invType, invOrigin: invOrigin, inRange: inpRange, market: market },
                dataType: "json",
                type: "POST",
                success: function (response) {
                    totalClient = response.data[0].total_clients;
                    $('#totalClients').text(new Intl.NumberFormat("id").format(totalClient))
                }
            });

            $.ajax({
                url: '@Url.Action("GetCardActiveClient", "BasisInvestor")',
                data: { periodeAwal: periodeAwal, namaPE: namaPE, invType: invType, invOrigin: invOrigin, inRange: inpRange, market: market },
                dataType: "json",
                type: "POST",
                success: function (response) {
                    $('#activeClient').text(new Intl.NumberFormat("id").format(response.data[0].active_clients))
                }
            });

            $.ajax({
                url: '@Url.Action("GetCardTrxFreq", "BasisInvestor")',
                data: { periodeAwal: periodeAwal, namaPE: namaPE, invType: invType, invOrigin: invOrigin, inRange: inpRange, market: market },
                dataType: "json",
                type: "POST",
                success: function (response) {
                    txInvFreq = response.data[0].trx_freq;
                    $('#trxFreq').text(new Intl.NumberFormat("id").format(txInvFreq))
                }
            });

            $.ajax({
                url: '@Url.Action("GetCardtradedValue", "BasisInvestor")',
                data: { periodeAwal: periodeAwal, namaPE: namaPE, invType: invType, invOrigin: invOrigin, inRange: inpRange, market: market },
                dataType: "json",
                type: "POST",
                success: function (response) {
                    $('#tradedValue').text(new Intl.NumberFormat("id").format(response.data[0].traded_value))
                }
            });

            $.ajax({
                url: '@Url.Action("GetCardClientLiquidAmt", "BasisInvestor")',
                data: { periodeAwal: periodeAwal, namaPE: namaPE, invType: invType, invOrigin: invOrigin, inRange: inpRange, market: market },
                dataType: "json",
                type: "POST",
                success: function (response) {
                    $('#clientLiquidAmt').text(new Intl.NumberFormat("id").format(response.data[0].client_liquid_amt))
                }
            });

            @* var basisInvestors = ['CHAMPION', 'POTENTIAL LOYALIST', 'PROMISING', 'RECENT CUSTOMER', 'AT RISK', 'CHURN'];
            var data = [];

            $.each(basisInvestors, function (index, val) { 
                data = [];

                $.ajax({
                    url: '@Url.Action("GetSegmentsTrxFreq", "BasisInvestor")',
                    data: { periodeAwal: periodeAwal, namaPE: namaPE, basisInvestor: val },
                    dataType: "json",
                    type: "POST",
                    success: function (response) {
                        data.push({ category: "% Transaction Freq", value: response.data[0].res });
                    }
                });

                $.ajax({
                    url: '@Url.Action("GetSegmentsTotalClients", "BasisInvestor")',
                    data: { periodeAwal: periodeAwal, namaPE: namaPE, basisInvestor: val },
                    dataType: "json",
                    type: "POST",
                    success: function (response) {
                        data.push({ category: "% Total Client", value: response.data[0].res });
                    }
                });

                var idx = index + 1;

                $("#chartContainer" + idx).dxChart("option", "dataSource", temp);
            
            }); *@

        }
    }
</script>

<style type="text/css">
    .mandatory {
        color: red;
    }

    .card {
        margin: 5px;
        text-align: center;
    }

    .small-card-body {
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

</style>
