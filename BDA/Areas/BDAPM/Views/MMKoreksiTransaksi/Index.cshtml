@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
    var periodeAwal = (DateTime?)TempData.Peek("PeriodeAwal");
    var periodeAkhir = (DateTime?)TempData.Peek("PeriodeAkhir");
    var amended_info_type = (string[])TempData.Peek("amended_info_type");
    var p = (string[])ViewBag.period;
}

@inject BDA.DataModel.DataEntities db

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">
        @*filter*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">

                    <div class="col-lg-4 form-group">
                        <label>Periode Awal<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("PeriodeAwal")
                            .DisplayFormat("dd MMM yyyy")
                            .Value(periodeAwal == null ? DateTime.Now : periodeAwal)
                            .Max(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Periode Akhir<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("PeriodeAkhir")
                            .DisplayFormat("dd MMM yyyy")
                            .Value(periodeAkhir == null ? DateTime.Now : periodeAkhir)
                            .Min(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Amanded Info Type</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("MemberTypes")
                            .DataSource(d => d.Mvc()
                            .Controller("MMKoreksiTransaksi")
                                .LoadAction("GetMemberTypes")
                            .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .Width("100%"))
                    </div>

                </div>

                <div class="float-left">
                    @(Html.DevExtreme().Button()
                        .ID("Filter")
                        .Type(ButtonType.Default)
                        .Text("Tampilkan")
                        .OnClick("onButtonFilterClicked")
                        .ValidationGroup("Filter"))
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3">
                @(Html.DevExtreme().Chart()
                    .ID("chart")
                    .Series(s => s
                    .Add()
                    .ArgumentField("Day")
                    .ValueField("Oranges")
                    .Name("My oranges")
                    .Type(SeriesType.Bar)
                    .Color("#ffaa66")
                    )
                    .DataSource(new[] {
                    new { Day = "Monday", Oranges = 3 },
                    new { Day = "Tuesday", Oranges = 2 },
                    new { Day = "Wednesday", Oranges = 3 },
                    new { Day = "Thursday", Oranges = 4 },
                    new { Day = "Friday", Oranges = 6 },
                    new { Day = "Saturday", Oranges = 11 },
                    new { Day = "Sunday", Oranges = 4 }
                    })
                    )
                @* @(Html.DevExtreme().Chart()
                    .ID("bar-chart")
                    .Title("Cluster PE Berdasarkan Persentase MKBD dibandingkan MKBD Dipersyaratkan")
                    .Export(e => e.Enabled(true))
                    .Series(s => s
                    .Add()
                    .ArgumentField("cluster")
                    .ValueField("total")
                    .Name("Cluster PE")
                    .Type(SeriesType.Bar)
                    .Color("red")
                    .Label(l => l
                    .Visible(true)
                    .Format(f => f
                    .Type(Format.FixedPoint)
                    .Precision(0))))
                    .DataSource(d => d.Mvc()
                    .Controller("SegmentationSummaryClusterMKBD")
                    .LoadAction("GetChartClusterBarSearch")
                    .OnBeforeSend("onGridBeforeSend"))) *@
            </div>

            <div class="col-lg-3">
                @(Html.DevExtreme().Chart()
                    .ID("charts")
                    .Series(s => s
                    .Add()
                    .ArgumentField("Day")
                    .ValueField("Oranges")
                    .Name("My oranges")
                    .Type(SeriesType.Bar)
                    .Color("#ffaa66")
                    )
                    .DataSource(new[] {
                    new { Day = "Monday", Oranges = 3 },
                    new { Day = "Tuesday", Oranges = 2 },
                    new { Day = "Wednesday", Oranges = 3 },
                    new { Day = "Thursday", Oranges = 4 },
                    new { Day = "Friday", Oranges = 6 },
                    new { Day = "Saturday", Oranges = 11 },
                    new { Day = "Sunday", Oranges = 4 }
                    })
                    )
                @* @(Html.DevExtreme().PieChart()
                    .ID("pie-chart")
                    .Type(PieChartType.Doughnut)
                    .Title("Jumlah PE dengan Alert Kas dan Setara Kas")
                    .Legend(l => l
                    .HorizontalAlignment(HorizontalAlignment.Right)
                    .VerticalAlignment(VerticalEdge.Top)
                    .Margin(0)
                    )
                    .CenterTemplate(@<text>
                <svg>
                    <circle cx="100" cy="100" r="<%- getInnerRadius() - 6 %>" fill="#eee"></circle>
                    <text text-anchor="middle" style="font-size: 35px" x="100" y="90" fill="#494949">
                        <tspan x="100">@(ViewBag.TotalPie)</tspan><tspan x="100" dy="20px" style="font-weight: 600"><%- formatNumber(calculateTotal(getAllSeries())) %></tspan>
                    </text>
                </svg>
            </text>)
                    .Export(e => e.Enabled(true))
                    .Series(s => s
                    .Add()
                    .ArgumentField("status")
                    .ValueField("total")
                    .Label(l => l
                    .Visible(true)
                    .Connector(c => c.Visible(true))
                    ))
                    .DataSource(d => d.Mvc()
                    .Controller("SegmentationSummaryClusterMKBD")
                    .LoadAction("GetChartClusterSearch")
                    .OnBeforeSend("onGridBeforeSend"))) *@
            </div>

            <div class="col-lg-6">
                        @(Html.DevExtreme().Chart()
                            .ID("chartsss")
                            .Series(s => s
                            .Add()
                            .ArgumentField("Day")
                            .ValueField("Oranges")
                            .Name("My oranges")
                            .Type(SeriesType.Bar)
                            .Color("#ffaa66")
                            )
                            .DataSource(new[] {
                    new { Day = "Monday", Oranges = 3 },
                    new { Day = "Tuesday", Oranges = 2 },
                    new { Day = "Wednesday", Oranges = 3 },
                    new { Day = "Thursday", Oranges = 4 },
                    new { Day = "Friday", Oranges = 6 },
                    new { Day = "Saturday", Oranges = 11 },
                    new { Day = "Sunday", Oranges = 4 }
                    })
                    )
            </div>
        </div>
        <br />
        <br />
        <div class="row">
            <div class="col-lg-6">
                @(Html.DevExtreme().Chart()
                    .ID("chartsdada")
                    .Series(s => s
                    .Add()
                    .ArgumentField("Day")
                    .ValueField("Oranges")
                    .Name("My oranges")
                    .Type(SeriesType.Bar)
                    .Color("#ffaa66")
                    )
                    .DataSource(new[] {
            new { Day = "Monday", Oranges = 3 },
            new { Day = "Tuesday", Oranges = 2 },
            new { Day = "Wednesday", Oranges = 3 },
            new { Day = "Thursday", Oranges = 4 },
            new { Day = "Friday", Oranges = 6 },
            new { Day = "Saturday", Oranges = 11 },
            new { Day = "Sunday", Oranges = 4 }
            })
                    )
                @* @(Html.DevExtreme().Chart()
                    .ID("bar-chart")
                    .Title("Cluster PE Berdasarkan Persentase MKBD dibandingkan MKBD Dipersyaratkan")
                    .Export(e => e.Enabled(true))
                    .Series(s => s
                    .Add()
                    .ArgumentField("cluster")
                    .ValueField("total")
                    .Name("Cluster PE")
                    .Type(SeriesType.Bar)
                    .Color("red")
                    .Label(l => l
                    .Visible(true)
                    .Format(f => f
                    .Type(Format.FixedPoint)
                    .Precision(0))))
                    .DataSource(d => d.Mvc()
                    .Controller("SegmentationSummaryClusterMKBD")
                    .LoadAction("GetChartClusterBarSearch")
                    .OnBeforeSend("onGridBeforeSend"))) *@
            </div>

            <div class="col-lg-6">
                @(Html.DevExtreme().Chart()
                    .ID("chartsxvxvx")
                    .Series(s => s
                    .Add()
                    .ArgumentField("Day")
                    .ValueField("Oranges")
                    .Name("My oranges")
                    .Type(SeriesType.Bar)
                    .Color("#ffaa66")
                    )
                    .DataSource(new[] {
            new { Day = "Monday", Oranges = 3 },
            new { Day = "Tuesday", Oranges = 2 },
            new { Day = "Wednesday", Oranges = 3 },
            new { Day = "Thursday", Oranges = 4 },
            new { Day = "Friday", Oranges = 6 },
            new { Day = "Saturday", Oranges = 11 },
            new { Day = "Sunday", Oranges = 4 }
            })
                    )
                @* @(Html.DevExtreme().PieChart()
                    .ID("pie-chart")
                    .Type(PieChartType.Doughnut)
                    .Title("Jumlah PE dengan Alert Kas dan Setara Kas")
                    .Legend(l => l
                    .HorizontalAlignment(HorizontalAlignment.Right)
                    .VerticalAlignment(VerticalEdge.Top)
                    .Margin(0)
                    )
                    .CenterTemplate(@<text>
                <svg>
                    <circle cx="100" cy="100" r="<%- getInnerRadius() - 6 %>" fill="#eee"></circle>
                    <text text-anchor="middle" style="font-size: 35px" x="100" y="90" fill="#494949">
                        <tspan x="100">@(ViewBag.TotalPie)</tspan><tspan x="100" dy="20px" style="font-weight: 600"><%- formatNumber(calculateTotal(getAllSeries())) %></tspan>
                    </text>
                </svg>
            </text>)
                    .Export(e => e.Enabled(true))
                    .Series(s => s
                    .Add()
                    .ArgumentField("status")
                    .ValueField("total")
                    .Label(l => l
                    .Visible(true)
                    .Connector(c => c.Visible(true))
                    ))
                    .DataSource(d => d.Mvc()
                    .Controller("SegmentationSummaryClusterMKBD")
                    .LoadAction("GetChartClusterSearch")
                    .OnBeforeSend("onGridBeforeSend"))) *@
            </div>
        </div>
        <br />
        <br />
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="float-right">
                    @if (ViewBag.Export)
                    {
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcelIndex();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdfIndex();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                    }
                </div>
            </div>
        </div>
        <div class="gridview-div">
            @(Html.DevExtreme().DataGrid()
                .ID("grid1")
                .ShowBorders(true).Width("100%").ShowColumnLines(true).ShowRowLines(true)
                .RemoteOperations(true)
                .Width("100%")
                .AllowColumnResizing(true)
                .ColumnAutoWidth(true)
                .WordWrapEnabled(true)
                .Columns(columns =>
                {
                    columns.Add().DataField("no").Caption("No.").Alignment(HorizontalAlignment.Center);
                    columns.Add().DataField("securitycompanycode").Caption("Kode PE").Alignment(HorizontalAlignment.Center);
                    columns.Add().DataField("securitycompanyname").Caption("Nama PE").Width(300);
                    columns.Add().DataField("simpanangiro").Caption("Simpanan Giro").Alignment(HorizontalAlignment.Right).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("depositolt3bulan").Caption("Deposito < 3 Bulan").Alignment(HorizontalAlignment.Right).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("depositogt3bulandijaminlps").Caption("Deposito > 3 Bulan Dijamin LPS").Alignment(HorizontalAlignment.Right).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("uangjaminanlkp").Caption("Uang Jaminan LKP").Alignment(HorizontalAlignment.Right).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("kasdansetarakas").Caption("Kas dan Setara Kas (Simpanan Giro + Deposito < 3 Bulan + Uang Jaminan LKP)").Alignment(HorizontalAlignment.Right).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("mkbd").Caption("MKBD").Format("#,##0").Alignment(HorizontalAlignment.Right).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("mkbdminimum").Caption("MKBD Minimum").Alignment(HorizontalAlignment.Right).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("mkbdpermkbdminimum").Caption("MKBD Terhadap MKBD Minimum %").Alignment(HorizontalAlignment.Right).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("cluster").Caption("Cluster").Alignment(HorizontalAlignment.Center);
                    columns.Add().DataField("status").Caption("Status");
                })
                .FilterRow(f => f.Visible(true))
                .ShowBorders(true)
                .Paging(p =>
                {
                    p.PageSize(20);
                    p.Enabled(true);
                })
                .Pager(p =>
                {
                    p.ShowInfo(true);
                }))
        </div>
        <br />
        <br />
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="float-right">
                    @if (ViewBag.Export)
                    {
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcelIndex();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdfIndex();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                    }
                </div>
            </div>
        </div>
        <div class="gridview-div">
            @(Html.DevExtreme().DataGrid()
                .ID("gridContainer")
                .DataSource(d => d
                .OData()
                .Version(2)
                .Url("https://js.devexpress.com/Demos/SalesViewer/odata/DaySaleDtoes")
                .Key("Id")
                .BeforeSend(@<text>
            function(request) {
            const year = new Date().getFullYear() - 1;
            request.params.startDate = `${year}-05-10`;
            request.params.endDate = `${year}-5-15`;
            }
        </text>)
                    )
                    .RemoteOperations(false)
                    .AllowColumnReordering(true)
                    .RowAlternationEnabled(true)
                    .Width("100%")
                    .ShowBorders(true)
                    .OnContentReady("contentReady")
                    .Paging(p => p.PageSize(10))
                    .Pager(p => p
                    .Visible(true)
                    .ShowPageSizeSelector(true)
                    .AllowedPageSizes(new[] { 10, 25, 50, 100 })
                    )
                    .SearchPanel(s => s
                    .Visible(true)
                    .HighlightCaseSensitive(true)
                    )
                    .GroupPanel(g => g.Visible(true))
                    .Grouping(g => g.AutoExpandAll(false))
                    .Columns(columns =>
                    {
                        columns.Add()
                    .DataField("Product")
                    .GroupIndex(0);

                        columns.Add()
                    .DataField("Amount")
                    .Caption("Sale Amount")
                    .DataType(GridColumnDataType.Number)
                    .Format(Format.Currency)
                    .Alignment(HorizontalAlignment.Right);

                        columns.Add()
                    .DataField("Discount")
                    .Caption("Discount %")
                    .DataType(GridColumnDataType.Number)
                    .Format(Format.Percent)
                    .Alignment(HorizontalAlignment.Right)
                    .AllowGrouping(false)
                    .CssClass("bullet")
                    .CellTemplate(@<text>
            @(Html.DevExtreme().Bullet()
            .Value(new JS("value * 100"))
            .Size(s => s
            .Height(35)
            .Width(150)
            )
            .Margin(m => m
            .Top(5)
            .Bottom(0)
            .Left(5)
            )
            .ShowTarget(false)
            .ShowZeroLevel(true)
            .StartScaleValue(0)
            .EndScaleValue(100)
            .Tooltip(t => t
            .Enabled(true)
            .Font(f => f.Size(18))
            .PaddingTopBottom(2)
            .CustomizeTooltip("customizeTooltip")
            )
            )
        </text>);

                        columns.Add()
            .DataField("SaleDate")
            .DataType(GridColumnDataType.Date);

                        columns.Add()
            .DataField("Region")
            .DataType(GridColumnDataType.String);

                        columns.Add()
            .DataField("Sector")
            .DataType(GridColumnDataType.String);

                        columns.Add()
            .DataField("Channel")
            .DataType(GridColumnDataType.String);

                        columns.Add()
            .DataField("Customer")
            .DataType(GridColumnDataType.String)
            .Width(150);
                    })
                )



        </div>
    </div>
}

<script>
    var collapsed = false;
    function contentReady(e) {
        if(!collapsed) {
            collapsed = true;
            e.component.expandRow(["EnviroCare"]);
        }
    }

    function customizeTooltip(pointsInfo) {
        return { text: parseInt(pointsInfo.originalValue) + "%" };
    }
</script>

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>

<script>
        var formatNumber = new Intl.NumberFormat("en-US", { maximumFractionDigits: 0 }).format;
        function customizeLabel(e) {
            return e.argumentText + "\n" + e.valueText;
        }

        function calculateTotal(series) {
            return series[0].getVisiblePoints().reduce(function (s, p) { return s + p.originalValue }, 0);
        }

        $("#PeriodeAwal").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Periode Awal] harus dipilih" }]
        })
        $("#PeriodeAkhir").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Periode Akhir] harus dipilih" }]
        })

        function onButtonFilterClicked(e) {
            let tempPeriodeAwal = $("#PeriodeAwal").dxDateBox("instance").option("value");
            let namaPE = $("#namaPEid").dxSelectBox("instance").option("value");
            let status = $("#Statusid").dxTagBox("instance").option("value");


            let periodeAwal = null;
            if (tempPeriodeAwal != null) {
            periodeAwal = tempPeriodeAwal.getFullYear() + '-' + String(tempPeriodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAwal.getDate()).padStart(2, '0');
            }

            $("#grid1").dxDataGrid("instance").refresh();

            $.ajax({
                url: '@Url.Action("GetChartClusterSearch", "SegmentationSummaryClusterMKBD")',
                data: { periodeAwal: periodeAwal, namaPE: namaPE, status: JSON.stringify(status) },
                dataType: "json",
                type: "POST",
                success: function (response) {
                $("#pie-chart").dxPieChart("instance").refresh();
                }
            });

            $.ajax({
                url: '@Url.Action("GetChartClusterBarSearch", "SegmentationSummaryClusterMKBD")',
                data: { periodeAwal: periodeAwal, namaPE: namaPE, status: JSON.stringify(status) },
                dataType: "json",
                type: "POST",
                success: function (response) {
                $("#bar-chart").dxChart("instance").refresh();
                }
            });
        }

        function onGridBeforeSend(method, ajaxOptions) {
            let tempPeriodeAwal = $("#PeriodeAwal").dxDateBox("instance").option("value");
            let namaPE = $("#namaPEid").dxSelectBox("instance").option("value");
            let status = $("#Statusid").dxTagBox("instance").option("value");


            let periodeAwal = null;
            if (tempPeriodeAwal != null) {
                periodeAwal = tempPeriodeAwal.getFullYear() + '-' + String(tempPeriodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAwal.getDate()).padStart(2, '0');
            }

            ajaxOptions.data.periodeAwal = periodeAwal;
            ajaxOptions.data.namaPE = namaPE;
            ajaxOptions.data.status = JSON.stringify(status);
        }

        function onSelectionChanged(e) {
            if (e.addedItems.length > 0) {
                e.component.field().val("");
            }
        }


</script>

<style type="text/css">
    .mandatory {
        color: red;
    }
</style>