@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
}

@inject BDA.DataModel.DataEntities db

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">

        <div style="padding-top:0px;">
            <div class="card-body">

                <div class="row">

                    <div class="col-lg-3 form-group">
                        <label>Periode Awal<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("PeriodeAwal")
                            .DisplayFormat("dd MMM yyyy")
                            .Value(DateTime.Now)
                            .Max(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-3 form-group">
                        <label>Periode Akhir<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("PeriodeAkhir")
                            .DisplayFormat("dd MMM yyyy")
                            .Value(DateTime.Now)
                            .Min(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-3 form-group">
                        <label>Bond Type</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("BondTypeid")
                            .DataSource(d => d.Mvc()
                            .Controller("MMCancelTransaksi")
                            .LoadAction("GetBondTypes")
                            .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-3 form-group">
                        <label>Cancelation Status</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Amandedid")
                            .DataSource(new[] { "Market", "Non Market" })
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .Placeholder("(ALL)"))
                    </div>

                </div>

                <table>
                    <tr>
                        <td>
                            <div class="float-left">
                                @(Html.DevExtreme().Button()
                                    .ID("Filter")
                                    .Type(ButtonType.Default)
                                    .Text("Tampilkan")
                                    .OnClick("onButtonFilterClicked")
                                    .ValidationGroup("Filter"))
                            </div>
                        </td>
                        <td>
                            <div class="float-left">
                                @(Html.DevExtreme().Button()
                                    .ID("Filters")
                                    .Type(ButtonType.Success)
                                    .Text("Cancel")
                                    .OnClick("onButtonFilterClickedCancel"))
                            </div>
                        </td>
                    </tr>
                </table>

                <div class="row">
                    <div class="col-lg-12">
                        @(Html.DevExtreme().Chart()
                            .ID("bar-chartnumbercancellation")
                            .Title("Number Of Cancellation")
                            .ArgumentAxis(o => o.Color("#767676").Label(l => l.Font(f => f.Color("#767676")).OverlappingBehavior(OverlappingBehavior.Rotate).RotationAngle(-45).WordWrap(VizWordWrap.None)))
                            .Rotated(false)
                            .Export(e => e.Enabled(true))
                            .Series(s => s
                            .Add()
                            .ArgumentField("bulan")
                            .ValueField("total")
                            .Name("Bulan")
                            .Type(SeriesType.Bar)
                            .Label(l => l
                            .Visible(true)
                            .Format(f => f
                            .Type(Format.FixedPoint)
                            .Precision(0))))
                            .DataSource(d => d.Mvc()
                            .Controller("MMCancelTransaksi")
                            .LoadAction("GetBarChartNumberCancellation")
                            .OnBeforeSend("onGridBeforeSend")))
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-lg-6">
                        @(Html.DevExtreme().PieChart()
                            .ID("pie-chartcancellation")
                            .Title("Cancellation Status")
                            .Legend(l => l
                            .HorizontalAlignment(HorizontalAlignment.Right)
                            .VerticalAlignment(VerticalEdge.Top)
                            .Margin(0))
                            .Export(e => e.Enabled(true))
                            .Series(s => s
                            .Add()
                            .ArgumentField("bondissuertypecode")
                            .ValueField("total")
                            .Label(l => l
                            .Visible(true)
                            .Font(f => f.Size(16))
                            .Connector(c => c
                            .Visible(true)
                            .Width(0.5)
                            )
                            .Position(PieChartLabelPosition.Columns)
                            .CustomizeText(@<text>
                        function(arg) {
                        return arg.valueText + " (" + arg.percentText + ")";
                        }
                    </text>)
                            )
                            )
                            .DataSource(d => d.Mvc()
                            .Controller("MMCancelTransaksi")
                            .LoadAction("GetChartCancellationStatus")
                            .OnBeforeSend("onGridBeforeSend")))
                    </div>

                    <div class="col-lg-6">
                        @(Html.DevExtreme().PieChart()
                            .ID("pie-chartbondtype")
                            .Title("Bond Type")
                            .Legend(l => l
                            .HorizontalAlignment(HorizontalAlignment.Right)
                            .VerticalAlignment(VerticalEdge.Top)
                            .Margin(0))
                            .Export(e => e.Enabled(true))
                            .Series(s => s
                            .Add()
                            .ArgumentField("bondissuertypecode")
                            .ValueField("total")
                            .Label(l => l
                            .Visible(true)
                            .Font(f => f.Size(16))
                            .Connector(c => c
                            .Visible(true)
                            .Width(0.5)
                            )
                            .Position(PieChartLabelPosition.Columns)
                            .CustomizeText(@<text>
                        function(arg) {
                        return arg.valueText + " (" + arg.percentText + ")";
                        }
                    </text>)
                            )
                            )
                            .DataSource(d => d.Mvc()
                            .Controller("MMCancelTransaksi")
                            .LoadAction("GetChartBondType")
                            .OnBeforeSend("onGridBeforeSend")))
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-lg-12">
                        @(Html.DevExtreme().Chart()
                            .ID("bar-chartJumlahTop10Market")
                            .Palette(VizPalette.Bright)
                            .CommonSeriesSettings(s => s
                            .ArgumentField("buyerfirmcode")
                            .Type(SeriesType.StackedBar))
                            .Series(s =>
                            {
                                s.Add().ValueField("DOUBLE_REPORT").Name("DOUBLE REPORT");
                                s.Add().ValueField("NETWORK_CONNECTION").Name("NETWORK CONNECTION");
                                s.Add().ValueField("OTHERS").Name("OTHERS");
                                s.Add().ValueField("TRADE_CANCEL").Name("TRADE CANCEL");
                                s.Add().ValueField("WRONG_INPUT").Name("WRONG INPUT");
                            })
                            .Legend(l => l
                            .VerticalAlignment(VerticalEdge.Bottom)
                            .HorizontalAlignment(HorizontalAlignment.Center)
                            .ItemTextPosition(Position.Top)
                            )
                            .ValueAxis(a => a
                            .Add()
                            .Position(Position.Left)
                            )
                            .Title("Top 10 Partisipan Yang Melakukan Cancel Berdasarkan Frekuensi Periode Januari - Juli 2025")
                            .Export(e => e.Enabled(true))
                            .Tooltip(t => t
                            .Enabled(true)
                            .Location(ChartTooltipLocation.Edge)
                            .CustomizeTooltip(@<text>
                        function(arg) {
                        return {
                        text: arg.seriesName + " " + arg.valueText
                        };
                        }
                    </text>)
                            )
                            .DataSource(d => d.Mvc()
                            .Controller("MMCancelTransaksi")
                            .LoadAction("GetBarChartTop10CancelMarket")
                            .OnBeforeSend("onGridBeforeSend"))
                            )
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-lg-6">
                        @(Html.DevExtreme().Chart()
                            .ID("bar-chartcanceledbonds")
                            .Title("Top 15 Canceled/Sukuk")
                            .ArgumentAxis(o => o.Color("#767676").Label(l => l.Font(f => f.Color("#767676")).OverlappingBehavior(OverlappingBehavior.Rotate).RotationAngle(-45).WordWrap(VizWordWrap.None)))
                            .Rotated(false)
                            .Export(e => e.Enabled(true))
                            .Series(s => s
                            .Add()
                            .ArgumentField("bondcode")
                            .ValueField("total")
                            .Name("Bonds/Sukuk")
                            .Type(SeriesType.Bar)
                            .Color("#64a0fb")
                            .Label(l => l
                            .Visible(true)
                            .Format(f => f
                            .Type(Format.FixedPoint)
                            .Precision(0))))
                            .DataSource(d => d.Mvc()
                            .Controller("MMCancelTransaksi")
                            .LoadAction("GetBarChartCanceledBonds")
                            .OnBeforeSend("onGridBeforeSend")))
                    </div>
                    <div class="col-lg-6">
                        @(Html.DevExtreme().Chart()
                            .ID("bar-chartreasoncanceledbonds")
                            .Title("Reason For Cancellation")
                            .ArgumentAxis(o => o.Color("#767676").Label(l => l.Font(f => f.Color("#767676")).OverlappingBehavior(OverlappingBehavior.Rotate).RotationAngle(-45).WordWrap(VizWordWrap.None)))
                            .Rotated(false)
                            .Export(e => e.Enabled(true))
                            .Series(s => s
                            .Add()
                            .ArgumentField("tradereason")
                            .ValueField("total")
                            .Name("Reason For Cancellation")
                            .Type(SeriesType.Bar)
                            .Color("#64a0fb")
                            .Label(l => l
                            .Visible(true)
                            .Format(f => f
                            .Type(Format.FixedPoint)
                            .Precision(0))))
                            .DataSource(d => d.Mvc()
                            .Controller("MMCancelTransaksi")
                            .LoadAction("GetBarChartReasonCanceledBonds")
                            .OnBeforeSend("onGridBeforeSend")))
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-lg-12">
                        @(Html.DevExtreme().Chart()
                            .ID("bar-chartdatecanceledbonds")
                            .Title("Date Of Cancellation")
                            .ArgumentAxis(o => o.Color("#767676").Label(l => l.Font(f => f.Color("#767676")).OverlappingBehavior(OverlappingBehavior.Rotate).RotationAngle(-45).WordWrap(VizWordWrap.None)))
                            .Rotated(false)
                            .Export(e => e.Enabled(true))
                            .Series(s => s
                            .Add()
                            .ArgumentField("entrydate")
                            .ValueField("total")
                            .Name("Date")
                            .Type(SeriesType.Bar)
                            .Color("#64a0fb")
                            .Label(l => l
                            .Visible(true)
                            .Format(f => f
                            .Type(Format.FixedPoint)
                            .Precision(0))))
                            .DataSource(d => d.Mvc()
                            .Controller("MMCancelTransaksi")
                            .LoadAction("GetBarChartDateCanceledBonds")
                            .OnBeforeSend("onGridBeforeSend")))
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>

<style type="text/css">
    .mandatory {
        color: red;
    }
</style>

<script>
    $(function () {
           const startDate = $("#PeriodeAwal").dxDateBox({
               onValueChanged: function (e) {
                   endDate.option("min", e.value);
               }
           }).dxDateBox("instance");
           const endDate = $("#PeriodeAkhir").dxDateBox({
               onValueChanged: function (e) {
                   startDate.option("max", e.value);
               }
           }).dxDateBox("instance");

           $("#PeriodeAwal").dxValidator({
               validationGroup: "Filter",
               validationRules: [{ type: "required", message: "[Periode Awal] harus dipilih" }]
           })
           $("#PeriodeAkhir").dxValidator({
               validationGroup: "Filter",
               validationRules: [{ type: "required", message: "[Periode Akhir] harus dipilih" }]
           })
    });

    function onSelectionChanged(e) {
        if (e.addedItems.length > 0) {
            e.component.field().val(""); // Clears the search text. However, search filter is only applied to the widget after focus is lost in the input element
        }
    }

    function onButtonFilterClicked(e) {
        let tempPeriodeAwal = $("#PeriodeAwal").dxDateBox("instance").option("value");
        let tempPeriodeAkhir = $("#PeriodeAkhir").dxDateBox("instance").option("value");
        let bondissuertypecode = $("#BondTypeid").dxTagBox("instance").option("value");


        let periodeAwal = null;
        if (tempPeriodeAwal != null) {
            periodeAwal = tempPeriodeAwal.getFullYear() + '-' + String(tempPeriodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAwal.getDate()).padStart(2, '0');
        }

        let periodeAkhir = null;
        if (tempPeriodeAkhir != null) {
            periodeAkhir = tempPeriodeAkhir.getFullYear() + '-' + String(tempPeriodeAkhir.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAkhir.getDate()).padStart(2, '0');
        }

        //$("#grid1").dxDataGrid("instance").refresh();

         $.ajax({
            url: '@Url.Action("GetBarChartNumberCancellation", "MMCancelTransaksi")',
            data: { periodeAwal: periodeAwal, periodeAkhir: periodeAkhir, bondissuertypecode: JSON.stringify(bondissuertypecode) },
            dataType: "json",
            type: "POST",
            success: function (response) {
            $("#bar-chartnumbercancellation").dxChart("instance").refresh();
            }
        });

        $.ajax({
            url: '@Url.Action("GetChartBondType", "MMCancelTransaksi")',
            data: { periodeAwal: periodeAwal, periodeAkhir: periodeAkhir, bondissuertypecode: JSON.stringify(bondissuertypecode) },
            dataType: "json",
            type: "POST",
            success: function (response) {
            $("#pie-chartcancellation").dxPieChart("instance").refresh();
            }
        });

         $.ajax({
            url: '@Url.Action("GetChartBondType", "MMCancelTransaksi")',
            data: { periodeAwal: periodeAwal, periodeAkhir: periodeAkhir, bondissuertypecode: JSON.stringify(bondissuertypecode) },
            dataType: "json",
            type: "POST",
            success: function (response) {
            $("#pie-chartbondtype").dxPieChart("instance").refresh();
            }
        });

         $.ajax({
            url: '@Url.Action("GetBarChartTop10CancelMarket", "MMCancelTransaksi")',
            data: { periodeAwal: periodeAwal, periodeAkhir: periodeAkhir, bondissuertypecode: JSON.stringify(bondissuertypecode) },
            dataType: "json",
            type: "POST",
            success: function (response) {
            $("#bar-chartJumlahTop10Market").dxChart("instance").refresh();
            }
        });

         $.ajax({
            url: '@Url.Action("GetBarChartCanceledBonds", "MMCancelTransaksi")',
            data: { periodeAwal: periodeAwal, periodeAkhir: periodeAkhir, bondissuertypecode: JSON.stringify(bondissuertypecode) },
            dataType: "json",
            type: "POST",
            success: function (response) {
            $("#bar-chartcanceledbonds").dxChart("instance").refresh();
            }
        });

         $.ajax({
            url: '@Url.Action("GetBarChartReasonCanceledBonds", "MMCancelTransaksi")',
            data: { periodeAwal: periodeAwal, periodeAkhir: periodeAkhir, bondissuertypecode: JSON.stringify(bondissuertypecode) },
            dataType: "json",
            type: "POST",
            success: function (response) {
            $("#bar-chartreasoncanceledbonds").dxChart("instance").refresh();
            }
        });

        $.ajax({
            url: '@Url.Action("GetBarChartDateCanceledBonds", "MMCancelTransaksi")',
            data: { periodeAwal: periodeAwal, periodeAkhir: periodeAkhir, bondissuertypecode: JSON.stringify(bondissuertypecode) },
            dataType: "json",
            type: "POST",
            success: function (response) {
            $("#bar-chartdatecanceledbonds").dxChart("instance").refresh();
            }
        });
    }

    function onButtonFilterClickedCancel(e) {
        location.reload(); // Reloads the page, possibly from cache
    }

    function onGridBeforeSend(method, ajaxOptions) {
        let tempPeriodeAwal = $("#PeriodeAwal").dxDateBox("instance").option("value");
        let tempPeriodeAkhir = $("#PeriodeAkhir").dxDateBox("instance").option("value");
        let bondissuertypecode = $("#BondTypeid").dxTagBox("instance").option("value");


        let periodeAwal = null;
        if (tempPeriodeAwal != null) {
            periodeAwal = tempPeriodeAwal.getFullYear() + '-' + String(tempPeriodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAwal.getDate()).padStart(2, '0');
        }

        let periodeAkhir = null;
        if (tempPeriodeAkhir != null) {
            periodeAkhir = tempPeriodeAkhir.getFullYear() + '-' + String(tempPeriodeAkhir.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAkhir.getDate()).padStart(2, '0');
        }

        ajaxOptions.data.periodeAwal = periodeAwal;
        ajaxOptions.data.periodeAkhir = periodeAkhir;
        ajaxOptions.data.bondissuertypecode = JSON.stringify(bondissuertypecode);
    }

</script>