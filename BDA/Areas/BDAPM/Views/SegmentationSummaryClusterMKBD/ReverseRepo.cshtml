@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
}
@section RightToolbar {
    <div class="d-flex align-items-center">
        <a class="nav-link btn btn-light-warning font-weight-bolder btn-sm mr-2" href="@Url.Action("Index")"><i class="fa fa-arrow-left"></i> Kembali Ke Daftar</a>
    </div>
}
@inject BDA.DataModel.DataEntities db

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">
        @*filter*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 form-group">
                        <label>Tanggal<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("PeriodeAwal")
                            .DisplayFormat("dd MMM yyyy")
                            .Value(DateTime.Now)
                            .Max(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Nama PE</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("namaPEid")
                            .DataSource(d => d.Mvc()
                            .Controller("SegmentationSummaryClusterMKBD")
                            .Area("BDAPM")
                            .LoadAction("GetNamaPE")
                            .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .SearchEnabled(true)
                            .Width("100%")
                            .Placeholder("(ALL)")
                            )
                    </div>
                    <div class="col-lg-4 form-group" style="padding-top:25px;">
                        <label></label>
                        @(Html.DevExtreme().Button()
                            .ID("Filter")
                            .Type(ButtonType.Default)
                            .Text("Tampilkan")
                            .OnClick("onButtonFilterClicked")
                            .ValidationGroup("Filter"))
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <table>
                <tr>
                    <td>
                        <div class="form-group">
                            <input type="button" id="btnDetailCluster" class="btn btn-danger" value="Detail Cluster MKBD" onclick="location.href='@Url.Action("Detail", "SegmentationSummaryClusterMKBD")'" />
                        </div>
                    </td>
                    <td></td>
                    <td>
                        <div class="form-group">
                            <input type="button" id="btnRincianPortofolio" class="btn btn-danger" value="Rincian Portofolio" onclick="location.href='@Url.Action("RincianPortofolio", "SegmentationSummaryClusterMKBD")'" />
                        </div>
                    </td>
                    <td></td>
                    <td>
                        <div class="form-group">
                            <input type="button" id="btnReksadana" class="btn btn-danger" value="Reksadana" onclick="location.href='@Url.Action("Reksadana", "SegmentationSummaryClusterMKBD")'" />
                        </div>
                    </td>
                    <td></td>
                    <td>
                        <div class="form-group">
                            <input type="button" id="btnJaminanMargin" class="btn btn-danger" value="Jaminan Margin" onclick="location.href='@Url.Action("JaminanMargin", "SegmentationSummaryClusterMKBD")'" />
                        </div>
                    </td>
                    <td></td>
                    <td>
                        <div class="form-group">
                            <input type="button" id="btnReverseRepo" class="btn btn-danger" value="Reverse Repo" onclick="location.href='@Url.Action("ReverseRepo", "SegmentationSummaryClusterMKBD")'" />
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="float-right">
                    @if (ViewBag.Export)
                    {
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcelReverseRepo();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdfReverseRepo();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                    }
                </div>
            </div>
        </div>

        <div class="gridview-div">
            @(Html.DevExtreme().DataGrid()
                .ID("grid1")
                .ShowBorders(true).Width("100%").ShowColumnLines(true).ShowRowLines(true)
                .DataSource(d => d.Mvc()
                .Controller("SegmentationSummaryClusterMKBD")
                .LoadAction("GetGridDataReverseRepo")
                .Key("securitycompanycode")
                .LoadParams(new { periodeAwal = new JS("getperiodeAwalIdValue"), namaPE = new JS("getIdValue") }))
                .RemoteOperations(true)
                .Width("100%")
                .AllowColumnResizing(true)
                .ColumnAutoWidth(true)
                .WordWrapEnabled(true)
                .Columns(columns =>
                {
                    columns.Add().DataField("no").Caption("No.").Alignment(HorizontalAlignment.Center).Width(50);
                    columns.Add().DataField("securitycode").Caption("Jenis Reverse Repo");
                    columns.Add().DataField("sellername").Caption("Penjual (Lawan Transaksi)").Width(300);
                    columns.Add().DataField("buyingdate").Caption("Tanggal Pembelian").Alignment(HorizontalAlignment.Center);
                    columns.Add().DataField("sellingdate").Caption("Tanggal Penjualan Kembali").Alignment(HorizontalAlignment.Center);
                    columns.Add().DataField("buyingamount").Caption("Nilai Pembelian").Alignment(HorizontalAlignment.Right).Width(130).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("sellingamount").Caption("Nilai Penjualan Kembali").Alignment(HorizontalAlignment.Right).Width(130).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("collateralsecuritycode").Caption("Kode Efek Jaminan").Width(130);
                    columns.Add().DataField("collateralamount").Caption("Jumlah Jaminan (Lembar/Nominal)").Alignment(HorizontalAlignment.Right).Width(140).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("fairmarketvalue").Caption("Nilai Pasar Wajar Jaminan").Alignment(HorizontalAlignment.Right).Width(130).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("liabilitiesrankingvalue").Caption("Nilai Rangking Liabilities").Alignment(HorizontalAlignment.Right).Width(130).DataType(GridColumnDataType.Number).Format(",##0");
                })
                .ColumnResizingMode(ColumnResizingMode.Widget)
                .FilterRow(f => f.Visible(true))
                .ShowBorders(false)
                .Paging(p =>
                {
                    p.PageSize(20);
                    p.Enabled(true);
                })
                .Pager(p =>
                {
                    p.ShowInfo(true);
                })
                )
        </div>

        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="float-right">
                    @if (ViewBag.Export)
                    {
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcelReverseRepoDetailSummary();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdfReverseRepoDetailSummary();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                    }
                </div>
            </div>
        </div>
        <div class="gridview-div">
            @(Html.DevExtreme().DataGrid()
                .ID("grid2")
                .ShowBorders(true).Width("100%").ShowColumnLines(true).ShowRowLines(true)
                .DataSource(d => d.Mvc()
                .Controller("SegmentationSummaryClusterMKBD")
                .LoadAction("GetGridDataReverseRepoDetailSummary")
                .Key("securitycompanycode")
                .LoadParams(new { periodeAwal = new JS("getperiodeAwalIdValue"), namaPE = new JS("getIdValue") }))
                .RemoteOperations(false)
                .Width("100%")
                .AllowColumnResizing(true)
                .ColumnAutoWidth(true)
                .WordWrapEnabled(true)
                .Columns(columns =>
                {
                    columns.Add().DataField("mkbdvd510description").Caption("Detail Summary").Width(800);
                    columns.Add().DataField("buyingamount").Caption("Nilai Pembelian").Alignment(HorizontalAlignment.Right).Width(150).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("sellingamount").Caption("Nilai Penjualan Kembali").Alignment(HorizontalAlignment.Right).Width(150).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("fairmarketvalue").Caption("Nilai Pasar Wajar Jaminan").Alignment(HorizontalAlignment.Right).Width(150).DataType(GridColumnDataType.Number).Format(",##0");
                    columns.Add().DataField("liabilitiesrankingvalue").Caption("Nilai Rangking Liabilities").Alignment(HorizontalAlignment.Right).Width(150).DataType(GridColumnDataType.Number).Format(",##0");
                })
                .ColumnResizingMode(ColumnResizingMode.Widget)
                .FilterRow(f => f.Visible(true))
                .ShowBorders(false)
                .Paging(p =>
                {
                    p.PageSize(20);
                    p.Enabled(true);
                })
                .Pager(p =>
                {
                    p.ShowInfo(true);
                })
                )
        </div>

        <!-- The Modal  Detail-->
        <div class="modal fade" id="ModalSimpanPenggunaanData" tabindex="-1" role="document" aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#0066b2">
                        <h4 class="modal-title" style="text-align:left">
                            <font color="white">Pilih Penggunaan Data</font>
                        </h4>
                    </div><!--Modal Header-->
                    <!-- Modal body -->
                    <div class="modal-body">
                        <form id="StrukturFormDetail" method="POST" action="" class="form-horizontal row-border">
                            <div class="row" style="padding: 0 10px 0 10px;">
                                @(Html.DevExtreme().SelectBox()
                                    .ID("penggunaandataid")
                                    .DataSource(d => d.Mvc()
                                    .Controller("PenggunaanData")
                                    .Area("Website")
                                    .LoadAction("GetPenggunaanData")
                                    .Key("value"))
                                    .ValueExpr("value")
                                    .DisplayExpr("text")
                                    .SearchEnabled(true)
                                    .Width("100%")
                                    )
                            </div>
                        </form>
                    </div>
                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" id="btnSavePenggunaanData" class="btn btn-primary" data-bs-dismiss="modal"><i class='fa fa-save'></i> Save</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- The Modal  Detail-->
    </div>
}

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>

<script>

    function ExportToExcelReverseRepo() {
         $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportIndexReverseRepo", "SegmentationSummaryClusterMKBD")",
            success: function (response) {
                if (response.result == "Success") {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('Main sheet');

                    DevExpress.excelExporter.exportDataGrid({
                        component: $("#grid1").dxDataGrid("instance"),
                        worksheet: worksheet,
                        customizeCell: function (options) {
                            var { gridCell, excelCell } = options;

                            if (gridCell.rowType === 'data') {
                                if (options.gridCell.column.dataType === 'number') {
                                    excelCell.numFmt = '#,##0';
                                }
                            }
                        }
                    }).then(function () {
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: "application/octet-stream" }), "ReverseRepo_" + new Date().toISOString().slice(0, 10) + ".xlsx");
                        });
                    });
                }
            }
        });
    }

    function ExportToPdfReverseRepo() {
        var dataGrid = $("#grid1").dxDataGrid("instance");
        dataGrid.option("onExporting", function (e) { });
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("LogExportPDFReverseRepo", "SegmentationSummaryClusterMKBD")",
                data: fd,
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("FileReverseRepo", "SegmentationSummaryClusterMKBD")"
            });
            e.cancel = true;
        });
        dataGrid.exportToExcel();
    }

    function ExportToExcelReverseRepoDetailSummary() {
         $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportIndexReverseRepoDetailSummary", "SegmentationSummaryClusterMKBD")",
            success: function (response) {
                if (response.result == "Success") {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('Main sheet');

                    DevExpress.excelExporter.exportDataGrid({
                        component: $("#grid2").dxDataGrid("instance"),
                        worksheet: worksheet,
                        customizeCell: function (options) {
                            var { gridCell, excelCell } = options;

                            if (gridCell.rowType === 'data') {
                                if (options.gridCell.column.dataType === 'number') {
                                    excelCell.numFmt = '#,##0';
                                }
                            }
                        }
                    }).then(function () {
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: "application/octet-stream" }), "ReverseRepoDetailSummary_" + new Date().toISOString().slice(0, 10) + ".xlsx");
                        });
                    });
                }
            }
        });
    }

    function ExportToPdfReverseRepoDetailSummary() {
        var dataGrid = $("#grid2").dxDataGrid("instance");
        dataGrid.option("onExporting", function (e) { });
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("LogExportPDFReverseRepoDetailSummary", "SegmentationSummaryClusterMKBD")",
                data: fd,
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("FileReverseRepoDetailSummary", "SegmentationSummaryClusterMKBD")"
            });
            e.cancel = true;
        });
        dataGrid.exportToExcel();
    }



    function getperiodeAwalIdValue() {
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        const periodeAwal = urlParams.get('periodeAwal');
        return periodeAwal
    }

    function getIdValue() {
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        const id = urlParams.get('id');
        return id
    }

    $(function () {
        const startDate = $("#PeriodeAwal").dxDateBox({
            onValueChanged: function (e) {
                @* endDate.option("min", e.value); *@
            }
        }).dxDateBox("instance");

        $("#PeriodeAwal").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Tanggal] harus dipilih" }]
        })
    });

    $(function () {
        $("#penggunaandataid").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Penggunaan Data] harus dipilih" }]
        })
    });

    @* $(function () {
        $("#namaPEid").dxValidator({
        validationGroup: "Filter",
        validationRules: [{ type: "required", message: "[Nama PE] harus dipilih" }]
        })
        }); *@

        $(window).on('load', function () {
            $("#ModalSimpanPenggunaanData").modal("show");
        });

    $("#btnSavePenggunaanData").click(function () {
        let penggunaandataid = $("#penggunaandataid").dxSelectBox("instance").option("value");

        if (penggunaandataid == null) {
            alert("Silahkan Pilih Tujuan Penggunaan Data");
            return false;
        } else {
            $.ajax({
                url: '@Url.Action("SimpanPenggunaanData", "SegmentationSummaryClusterMKBD")',
                data: { id: penggunaandataid },
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.success == true) {
                        $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Success !";
                    }
                    else if (data.success == false) {
                        alert(data.message);
                        $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Failed !";
                    }
                }
            });
        }
    });

    function onSelectionChanged(e) {
        if (e.addedItems.length > 0) {
            e.component.field().val(""); // Clears the search text. However, search filter is only applied to the widget after focus is lost in the input element
        }
    }

    function onButtonFilterClicked(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") {
            let tempPeriodeAwal = $("#PeriodeAwal").dxDateBox("instance").option("value");
            let namaPE = $("#namaPEid").dxSelectBox("instance").option("value");

            let periodeAwal = null;
            if (tempPeriodeAwal != null) {
                periodeAwal = tempPeriodeAwal.getFullYear() + '-' + String(tempPeriodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAwal.getDate()).padStart(2, '0');
            }

            if (namaPE == null) {
                $.ajax({
                    url: '@Url.Action("GetGridDataReverseRepo", "SegmentationSummaryClusterMKBD")',
                    data: { periodeAwal: periodeAwal },
                    dataType: "json",
                    type: "POST",
                    success: function (response) {

                        window.history.pushState('', 'My Page', 'ReverseRepo?periodeAwal=' + periodeAwal + '');
                        $("#grid1").dxDataGrid("refresh");
                        $('#ModalSimpanPenggunaanData').modal('hide');
                    }
                });

                $.ajax({
                    url: '@Url.Action("GetGridDataReverseRepoDetailSummary", "SegmentationSummaryClusterMKBD")',
                    data: { periodeAwal: periodeAwal },
                    dataType: "json",
                    type: "POST",
                    success: function (response) {

                        window.history.pushState('', 'My Page', 'ReverseRepo?periodeAwal=' + periodeAwal + '');
                        $("#grid2").dxDataGrid("refresh");
                        $('#ModalSimpanPenggunaanData').modal('hide');
                    }
                });
            } else {
                $.ajax({
                    url: '@Url.Action("GetGridDataReverseRepo", "SegmentationSummaryClusterMKBD")',
                    data: { periodeAwal: periodeAwal, namaPE: namaPE },
                    dataType: "json",
                    type: "POST",
                    success: function (response) {

                        window.history.pushState('', 'My Page', 'ReverseRepo?id=' + namaPE + '&periodeAwal=' + periodeAwal + '');
                        $("#grid1").dxDataGrid("refresh");
                        $('#ModalSimpanPenggunaanData').modal('hide');
                    }
                });

                $.ajax({
                    url: '@Url.Action("GetGridDataReverseRepoDetailSummary", "SegmentationSummaryClusterMKBD")',
                    data: { periodeAwal: periodeAwal, namaPE: namaPE },
                    dataType: "json",
                    type: "POST",
                    success: function (response) {

                        window.history.pushState('', 'My Page', 'ReverseRepo?id=' + namaPE + '&periodeAwal=' + periodeAwal + '');
                        $("#grid2").dxDataGrid("refresh");
                        $('#ModalSimpanPenggunaanData').modal('hide');
                    }
                });
            }
        }
    }
</script>
