@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
    string reportId = "Hutang Subordinasi";
    var p = (string[])ViewBag.period;
    bool isHive = ViewBag.Hive;
    var maxItems = db.GetSetting("LimitFilterLJK");
    string lbl1 = " ";
}

@inject BDA.DataModel.DataEntities db


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">
        @*filter*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 form-group">
                        <label>Tanggal<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("PeriodeAwal")
                            .DisplayFormat("dd MMM yyyy")
                            .Value(DateTime.Now)
                            .Max(DateTime.Now)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Nama PE<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("namaPEid")
                            .DataSource(d => d.Mvc()
                            .Controller("MendeteksiHutangSubOrdinasi")
                            .Area("BDAPM")
                            .LoadAction("GetNamaPE")
                            .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .SearchEnabled(true)
                            .Width("100%")
                            )
                    </div>
                </div>

                <div class="float-left">
                    @(Html.DevExtreme().Button()
                        .ID("Filter")
                        .Type(ButtonType.Default)
                        .Text("Tampilkan")
                        .OnClick("onButtonFilterClicked")
                        .ValidationGroup("Filter"))
                </div>

                <div class="float-right">
                    <a class="btn btn-dark font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcel();" title="Export Excel"><span class="image fa fa-file-excel"></span> Export Excel</a>
                    <a class="btn btn-success font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdf();" title="Export PDF"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                </div>
            </div>
        </div>
        @*grid*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row float-right">                    
                    <div class="col-lg-6 form-group" style="padding-right:25px;padding-left:25px">
                        <div class="row">
                            @(
                            Html.DevExtreme().DataGrid()
                            .ID("gridContainer")
                            .KeyExpr("ID")
                            .RemoteOperations(true)
                            .Width("100%")
                            .AllowColumnResizing(true)
                            .ColumnFixing(c => c.Enabled(true))
                            .Scrolling(s => s.ShowScrollbar(ShowScrollbarMode.Always))
                            .FilterRow(f => f.Visible(true))
                            .ShowBorders(true)
                            .Selection(c => c.Mode(SelectionMode.Single))
                            .Paging(p =>
                            {
                                p.PageSize(15);
                                p.Enabled(true);

                            })
                            .Pager(p =>
                            {
                                p.Visible(true);
                                p.ShowInfo(true);
                            })
                            .Columns(c =>
                            {
                                c.Add().DataField("NamaPE");
                                c.Add().DataField("TanggalHSOT0").Caption("Tanggal HSO (T0)");
                                c.Add().DataField("HSO").Alignment(HorizontalAlignment.Right).CellTemplate("<%= thousandSeparatorDecimal(value)%>");
                            })
                            .ShowRowLines(true)
                            )
                        </div>
                    </div>

                    <div class="col-lg-6 form-group" style="padding-right:25px;padding-left:25px">
                        <div class="row">
                            @(Html.DevExtreme().DataGrid()
                                .ID("gridContainer2")
                                .KeyExpr("ID")
                                .RemoteOperations(true)
                                .Width("100%")
                                .AllowColumnResizing(true)
                                .ColumnFixing(c => c.Enabled(true))
                                .Scrolling(s => s.ShowScrollbar(ShowScrollbarMode.Always))
                                .FilterRow(f => f.Visible(true))
                                .ShowBorders(true)
                                .Selection(c => c.Mode(SelectionMode.Single))
                                .Paging(p =>
                                {
                                    p.PageSize(15);
                                    p.Enabled(true);

                                })
                                .Pager(p =>
                                {
                                    p.Visible(true);
                                    p.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("LawanTransaksi");
                                    c.Add().DataField("BuyingDate");
                                    c.Add().DataField("ReverseRepo").Alignment(HorizontalAlignment.Right).CellTemplate("<%= thousandSeparatorDecimal(value)%>");
                                })
                                .ShowRowLines(true)
                                )
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <!-- The Modal  Detail-->
        <div class="modal fade" id="ModalSimpanPenggunaanData" tabindex="-1" role="document" aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#0066b2">
                        <h4 class="modal-title" style="text-align:left">
                            <font color="white">Pilih Penggunaan Data</font>
                        </h4>
                    </div><!--Modal Header-->
                    <!-- Modal body -->
                    <div class="modal-body">
                        <form id="StrukturFormDetail" method="POST" action="" class="form-horizontal row-border">
                            <div class="row" style="padding: 0 10px 0 10px;">
                                @(Html.DevExtreme().SelectBox()
                                    .ID("penggunaandataid")
                                    .DataSource(d => d.Mvc()
                                    .Controller("PenggunaanData")
                                    .Area("Website")
                                    .LoadAction("GetPenggunaanData")
                                    .Key("value"))
                                    .ValueExpr("value")
                                    .DisplayExpr("text")
                                    .SearchEnabled(true)
                                    .Width("100%")
                                    )
                            </div>
                        </form>
                    </div>
                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" id="btnSavePenggunaanData" class="btn btn-primary" data-bs-dismiss="modal"><i class='fa fa-save'></i> Save</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- The Modal  Detail-->
    </div>
}

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>

<script type="text/javascript">

    $(function () {
        $("#PeriodeAwal").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Tanggal] harus dipilih" }]
        })
    });

    $(function () {
        $("#penggunaandataid").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Penggunaan Data] harus dipilih" }]
        })
    });

    $(function () {
        $("#namaPEid").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Nama PE] harus dipilih" }]
        })
    });

    $(window).on('load', function () {
        $("#ModalSimpanPenggunaanData").modal("show");
    });

    $("#btnSavePenggunaanData").click(function () {
        let penggunaandataid = $("#penggunaandataid").dxSelectBox("instance").option("value");

        if (penggunaandataid == null) {
            alert("Silahkan Pilih Tujuan Penggunaan Data");
            return false;
        } else {
            $.ajax({
                url: '@Url.Action("SimpanPenggunaanData", "MendeteksiHutangSubordinasi")',
                data: { id: penggunaandataid },
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.success == true) {
                        $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Success !";
                    }
                    else if (data.success == false) {
                        alert(data.message);
                        $('#ModalSimpanPenggunaanData').modal('hide');
                        return "Saving Failed !";
                    }
                }
            });
        }
    });

    function onSelectionChanged(e) {
        if (e.addedItems.length > 0) {
            e.component.field().val(""); // Clears the search text. However, search filter is only applied to the widget after focus is lost in the input element
        }
    }

    function onButtonFilterClicked(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") {
            var tempPeriodeAwal = $("#PeriodeAwal").dxDateBox("instance").option("value");
            var namaPE = $("#namaPEid").dxSelectBox("instance").option("value");
            var periodeAwal = tempPeriodeAwal.getFullYear() + '-' + String(tempPeriodeAwal.getMonth() + 1).padStart(2, '0') + '-' + String(tempPeriodeAwal.getDate()).padStart(2, '0');

            var grid1 = $("#gridContainer").dxDataGrid("instance");
            var ds1 = DevExpress.data.AspNet.createStore({
                loadMethod: "GET",
                loadMode: "processed",
                loadUrl: '@Url.Action("getGrid1")?periode=' + periodeAwal + '&pe=' + namaPE
            });
            grid1.option('dataSource', ds1);
            
            var grid2 = $("#gridContainer2").dxDataGrid("instance");
            var ds2 = DevExpress.data.AspNet.createStore({
                loadMethod: "GET",
                loadMode: "processed",
                loadUrl: '@Url.Action("getGrid2")?periode=' + periodeAwal + '&pe=' + namaPE
            });
            grid2.option('dataSource', ds2);
        }
    }

    
    function thousandSeparatorDecimal(e) {
        e = parseFloat(e);
        if (e != null)
            return e.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 });
    }

    function ExportToExcel() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportIndex", "MendeteksiHutangSubOrdinasi")",
            success: function (response) {
                if (response.result == "Success") {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet1 = workbook.addWorksheet('Sheet1');
                    var worksheet2 = workbook.addWorksheet('Sheet2');

                    DevExpress.excelExporter.exportDataGrid({
                        component: $("#gridContainer").dxDataGrid("instance"),
                        worksheet: worksheet1,
                        customizeCell: function (options) {
                            var { gridCell, excelCell } = options;

                            if (gridCell.rowType === 'data') {
                                if (options.gridCell.column.dataType === 'number') {
                                    excelCell.numFmt = '#,##0';
                                }
                            }
                        }
                    }).then(() => DevExpress.excelExporter.exportDataGrid({
                        component: $("#gridContainer2").dxDataGrid("instance"),
                        worksheet: worksheet2,
                        customizeCell: function (options) {
                            var { gridCell, excelCell } = options;

                            if (gridCell.rowType === 'data') {
                                if (options.gridCell.column.dataType === 'number') {
                                    excelCell.numFmt = '#,##0';
                                }
                            }
                        }
                    })).then(function () {
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: "application/octet-stream" }), "MendeteksiHutangSubOrdinasi_" + new Date().toISOString().slice(0, 10) + ".xlsx");
                        });
                    });
                }
            }
        });
    }

    function ExportToPdf() {
        var dataGrid = $("#gridContainer").dxDataGrid("instance");
        dataGrid.option("onExporting", function (e) { });
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("LogExportPDFIndex", "MendeteksiHutangSubOrdinasi")",
                data: { file: fd, name: 'grid1' },
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("FileIndex", "MendeteksiHutangSubOrdinasi")"
            });
            e.cancel = true;
        });
        dataGrid.exportToExcel();

        var dataGrid2 = $("#gridContainer2").dxDataGrid("instance");
        dataGrid2.option("onExporting", function (e) { });
        dataGrid2.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("LogExportPDFIndex", "MendeteksiHutangSubOrdinasi")",
                data: { file: fd, name: 'grid2' },
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("FileIndex", "MendeteksiHutangSubOrdinasi")"
            });
            e.cancel = true;
        });
        dataGrid2.exportToExcel();
    }
</script>
