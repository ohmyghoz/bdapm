@inject BDA.DataModel.DataEntities db

@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";

    var levelAlert = (string[])TempData.Peek("LevelAlert");
    var memberTypes = (string[])TempData.Peek("MemberTypes");
    var members = (string[])TempData.Peek("Members");
    var periodeAwal = (DateTime?)TempData.Peek("PeriodeAwal");
    var periodeAkhir = (DateTime?)TempData.Peek("PeriodeAkhir");
    var dataMart = (string)TempData.Peek("DataMart");
    var permintaanIDeb = (string)TempData.Peek("PermintaanIDeb");

    var maxItems = db.GetSetting("LimitFilterLJK");
}

@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.14/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/3.3.1/exceljs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.4.0/polyfill.min.js"></script>*@

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>

<script type="text/javascript">
    function Detail() {
        var keys = $("#grid1").dxDataGrid("getSelectedRowsData");
        if (keys.length >= 1) {
            @*window.open("@Url.Action("Detail", "SizeBisnisPelapor")/" + keys[0].toString());*@
            $.ajax({
                type: "POST",
                url: "@Url.Action("Detail", "SizeBisnisPelapor")",
                data: {
                    memberType: keys[0].MEMBER_TYPE_CODE,
                    member: keys[0].MEMBER_CODE,
                    kodeAlert: keys[0].KODE_ALERT
                },
                success: function (response) {
                    if (response.result == "Redirect") {
                        window.open(response.url, "_blank");
                    }
                }
            });
        } else {
            swal({ type: 'error', title: 'Oops...', text: 'Silahkan Pilih Baris Telebih Dahulu' });
        }
    }

    function ExportToExcel() {
        $.ajax({
                type: "POST",
                url: "@Url.Action("LogExportIndex", "SizeBisnisPelapor")",
                success: function (response) {
                    if (response.result == "Success") {
                        var grid = $("#grid1").dxDataGrid("instance");
                        grid.option("onFileSaving", function (e) { });
                        grid.exportToExcel();
                    }
                }
            });

    }

    function ExportToPdf() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportIndex", "SizeBisnisPelapor")",
            success: function (response) {
                if (response.result == "Success") {
                    const doc = new jsPDF({
                        orientation: "landscape",
                        unit: "cm",
                        format: [21, 60]
                    });
                    var dataGrid = $("#grid1").dxDataGrid("instance");
                    var fileName = "SizeBisnisPelapor_" + new Date().toISOString().slice(0, 10) + ".pdf";
                    doc.setFontSize("6")
                    //var keys = $("#grid1").dxDataGrid("getSelectedRowsData")
                    //console.log(keys)
                    DevExpress.pdfExporter.exportDataGrid({
                        jsPDFDocument: doc,
                        component: dataGrid,
                        keepColumnWidths: true
                        //selectedRowsOnly: true
                    }).then(function () {
                        doc.save(fileName);
                    });
                }
            }
        });
    }

    function ExportToPdf2() {
        var dataGrid = $("#grid1").dxDataGrid("instance");
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportPDF", "SizeBisnisPelapor")",
                data: fd,
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("File", "SizeBisnisPelapor")"
            });
            e.cancel = true;
        });

        dataGrid.exportToExcel();
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 form-group">
                        <label>Level Alert</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("LevelAlert")
                            .DataSource(new[] {
                                new { display = "Red", value = "3" },
                                new { display = "Yellow", value = "2" },
                                new { display = "Green", value = "1" },
                                new { display = "Grey", value = "0" }
                            })
                            .ValueExpr("value")
                            .DisplayExpr("display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Value(levelAlert)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Jenis LJK</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("MemberTypes")
                            .DataSource(d => d.Mvc()
                                .Controller("SizeBisnisPelapor")
                                .LoadAction("GetMemberTypes")
                                .Key("kode_jenis_ljk"))
                            //.DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            .ValueExpr("kode_jenis_ljk")
                            .DisplayExpr("Display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .OnValueChanged("onJenisLJKChanged")
                            .Value(memberTypes)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>LJK</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Members")
                            .DataSource(d => d.Mvc()
                                .Controller("SizeBisnisPelapor")
                                .LoadAction("GetMembers")
                                .LoadParams(new { memberTypes = new JS("function() { return $(\"#MemberTypes\").dxTagBox(\"instance\").option(\"value\"); }"), reset = new JS("function() { return resetLJK; }") })
                                //.Key("kode_ljk")
                                .Key("CompositeKey")
                            )
                            .DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            //.ValueExpr("kode_ljk")
                            .ValueExpr("CompositeKey")
                            .DisplayExpr("Display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .OnOpened("onLJKOpened")
                            .OnValueChanged("onLJKChanged")
                            .Value(members)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Periode Awal<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("PeriodeAwal")
                            .DisplayFormat("dd MMM yyyy")
                            //.Value(DateTime.Now)
                            //.Max(DateTime.Now)
                            //.ShowClearButton(true)
                            .Value(periodeAwal == null ? DateTime.Now : periodeAwal)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Periode Akhir<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().DateBox()
                            .ID("PeriodeAkhir")
                            .DisplayFormat("dd MMM yyyy")
                            //.Value(DateTime.Now)
                            //.Min(DateTime.Now)
                            //.ShowClearButton(true)
                            .Value(periodeAkhir == null ? DateTime.Now : periodeAkhir)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Data Mart<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("DataMart")
                            .DataSource(new[] { "Bulanan", "Harian" })
                            //.Value("Bulanan")
                            //.SearchEnabled(true)
                            //.ShowClearButton(true)
                            .Value(dataMart == null ? "Bulanan" : dataMart)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Jumlah Permintaan IDeb<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("PermintaanIDeb")
                            .DataSource(new[] {
                                new { display = "Total Permintaan", value = "Total Permintaan" },
                                new { display = "Interactive", value = "Interactive" },
                                new { display = "Batch", value = "Batch" },
                                new { display = "Individu", value = "Individu" },
                                new { display = "Badan Usaha", value = "NonIndividu" }
                            })
                            .ValueExpr("value")
                            .DisplayExpr("display")
                            //.Value("Total Permintaan")
                            //.SearchEnabled(true)
                            //.ShowClearButton(true)
                            .Value(permintaanIDeb == null ? "Total Permintaan" : permintaanIDeb)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group">
                        <label>Kategori@*<span class="mandatory">*</span>*@</label>
                        @(Html.DevExtreme().SelectBox()
                            .ID("Kategori")
                            .DataSource(new[] {
                                new { display = "Total Baki Debet", value = "SB_Total_Baki_Debet" },
                                new { display = "Total Plafon", value = "SB_Total_Plafon" },
                                new { display = "Total Rekening Aktif", value = "SB_Total_Rekening_Aktif" },
                                new { display = "Total Jumlah Debitur", value = "SB_Total_Jumlah_Debitur" },
                            })
                            .ValueExpr("value")
                            .DisplayExpr("display")
                            //.Value("SB_Total_Baki_Debet")
                            //.SearchEnabled(true)
                            .ShowClearButton(true)
                            .Width("100%"))
                    </div>
                </div>

                <div class="float-left">
                    @(Html.DevExtreme().Button()
                        .ID("Filter")
                        .Type(ButtonType.Default)
                        .Text("Tampilkan")
                        .OnClick("onButtonFilterClicked")
                        .ValidationGroup("Filter"))
                </div>

                <div class="float-right">
                    <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:Detail();"><span class="image fa fa-desktop"></span> Detail</a>
                    @if (ViewBag.Export)
                    {
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcel();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                        @*<a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdf();"><span class="image fa fa-file-archive"></span> Export PDF</a>*@
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdf2();"><span class="image fa fa-file-archive"></span> Export PDF</a>
                    }
                </div>
            </div>
        </div>
        <div class="gridview-div">
            @(Html.DevExtreme().DataGrid()
                .ID("grid1")
                .DataSource(d => d.Mvc()
                    .Controller("SizeBisnisPelapor")
                    .LoadAction("GetGridData")
                    .OnBeforeSend("onGridBeforeSend"))
                .RemoteOperations(true)
                .Width("100%")
                .AllowColumnResizing(true)
                .Columns(columns =>
                {
                    columns.Add().DataField("KODE_ALERT").Visible(false);
                    columns.Add().DataField("NAMA_ALERT").Caption("Nama Alert").Width("100%");
                    columns.Add().DataField("TIPE_PERIODE").Caption("Data Mart").Width("100%");
                    columns.Add().DataField("JenisLJK").Caption("Jenis LJK").Width("100%");
                    columns.Add().DataField("LJK").Caption("LJK").Width("100%");
                    columns.Add().DataField("RED").Caption("Red").Width("30%").Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text><img src="~/assets/img/ball_red.png" /></text>);
                    columns.Add().DataField("YELLOW").Caption("Yellow").Width("30%").Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text><img src="~/assets/img/ball_yellow.png" /></text>);
                    columns.Add().DataField("GREEN").Caption("Green").Width("30%").Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text><img src="~/assets/img/ball_green.png" /></text>);
                    columns.Add().DataField("GREY").Caption("Grey").Width("30%").Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text><img src="~/assets/img/ball_grey.png" /></text>);
                })
                .FilterRow(f => f.Visible(true))
                .ShowBorders(false)
                .Selection(c => c.Mode(SelectionMode.Single))
                .Paging(p =>
                {
                    p.PageSize(20);
                    p.Enabled(true);
                })
                .Pager(p =>
                {
                    p.ShowInfo(true);
                })
                .OnExporting(@<text>
                    function(e) {
                        e.fileName = "SizeBisnisPelapor_" + new Date().toISOString().slice(0, 10);
                    }
                </text>))
        </div>
    </div>


}

<script>
    var resetLJK;

    $(function () {
        const startDate = $("#PeriodeAwal").dxDateBox({
            onValueChanged: function (e) {
                endDate.option("min", e.value);
            }
        }).dxDateBox("instance");
        const endDate = $("#PeriodeAkhir").dxDateBox({
            onValueChanged: function (e) {
                startDate.option("max", e.value);
            }
        }).dxDateBox("instance");

        $("#PeriodeAwal").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Periode Awal] harus dipilih" }]
        })
        $("#PeriodeAkhir").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Periode Akhir] harus dipilih" }]
        })
        $("#DataMart").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Data Mart] harus dipilih" }]
        })
        $("#PermintaanIDeb").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Permintaan IDeb] harus dipilih" }]
        })
        //$("#Kategori").dxValidator({
        //    validationGroup: "Filter",
        //    validationRules: [{ type: "required", message: "[Kategori] harus dipilih" }]
        //})
    });

    function onSelectionChanged(e) {
        if (e.addedItems.length > 0) {
            e.component.field().val("");
        }
    }

    function onJenisLJKChanged(e) {
        resetLJK = true;
        $("#Members").dxTagBox("instance").getDataSource().reload();
        $("#Members").dxTagBox("reset");
        resetLJK = false;
    }

    function onButtonFilterClicked(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") {
            $("#grid1").dxDataGrid("instance").refresh();
        }
    }

    function onGridBeforeSend(method, ajaxOptions) {
        let levelAlert = $("#LevelAlert").dxTagBox("instance").option("value");

        let memberTypes = $("#MemberTypes").dxTagBox("instance").option("value");

        let members = $("#Members").dxTagBox("instance").option("value");

        let tempPeriodeAwal = $("#PeriodeAwal").dxDateBox("instance").option("value");
        let periodeAwal = null;
        if (tempPeriodeAwal != null) {
            periodeAwal = tempPeriodeAwal.getFullYear() + '-' + (tempPeriodeAwal.getMonth() + 1) + '-' + tempPeriodeAwal.getDate();
        }

        let tempPeriodeAkhir = $("#PeriodeAkhir").dxDateBox("instance").option("value");
        let periodeAkhir = null;
        if (tempPeriodeAkhir != null) {
            periodeAkhir = tempPeriodeAkhir.getFullYear() + '-' + (tempPeriodeAkhir.getMonth() + 1) + '-' + tempPeriodeAkhir.getDate();
        }

        let dataMart = $("#DataMart").dxSelectBox("instance").option("value");

        let permintaanIDeb = $("#PermintaanIDeb").dxSelectBox("instance").option("value");

        let kategori = $("#Kategori").dxSelectBox("instance").option("value");

        ajaxOptions.data.levelAlert = JSON.stringify(levelAlert);
        ajaxOptions.data.memberTypes = JSON.stringify(memberTypes);
        ajaxOptions.data.members = JSON.stringify(members);
        ajaxOptions.data.periodeAwal = periodeAwal;
        ajaxOptions.data.periodeAkhir = periodeAkhir;
        ajaxOptions.data.dataMart = dataMart;
        ajaxOptions.data.permintaanIDeb = permintaanIDeb;
        ajaxOptions.data.kategori = kategori;
    }

    function onLJKOpened(e) {
        e.component.content().find('.dx-list-select-all').hide();
    }

    const maxItems = @maxItems;

    function onLJKChanged(e) {
        if (e.value.length > maxItems) {
            const newValue = e.value.slice(0, maxItems);
            e.component.option("value", newValue);
            //tooltip.show();
        }
    }
</script>

<style type="text/css">
    .mandatory {
        color: red;
    }
</style>