@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
    var maxItems = db.GetSetting("LimitFilterLJK");
    bool isExport = ViewBag.Export;
    string reportId = ViewBag.id;
    bool isHive = ViewBag.Hive;
    var p = (string[])TempData.Peek("periode");
}

@inject BDA.DataModel.DataEntities db

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>


<script type="text/javascript">
    function ExportToExcel() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportIndex", "Osint", new {reportId = reportId})",
            success: function (response) {
                if (response.result == "Success") {
                    var grid = $("#grid1").dxDataGrid("instance");
                    grid.option("onExporting", function (e) {
                        e.fileName = "Osint_@(reportId)_" + new Date().toISOString().slice(0, 10);
                    });
                    grid.option("onFileSaving", function (e) { });
                    grid.exportToExcel();
                }
            }
        });
    }
    function ExportToPdf2() {
        var dataGrid = $("#grid1").dxDataGrid("instance");
        dataGrid.option("onExporting", function (e) { });
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportPDF", "Osint", new {reportId = reportId})",
                data: fd,
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("File", "Osint", new {reportId = reportId})"
            });
            e.cancel = true;
        });

        dataGrid.exportToExcel();
    }
    function Antrian() {
        $("#grid1").dxDataGrid("instance").refresh().then(function () {
            $.ajax({
			type: "POST",
			url: "@Url.Action("Antrian", "Osint", new { reportId = reportId })",
			contentType: "application/x-www-form-urlencoded;charset=UTF-8",
            dataType: "json",
            success: function (response) {
                swal({ type: 'success', title: 'Success', text: response });
            },
            error: function (response) {
                swal({ type: 'error', title: 'Failed', text: response });
            }
		    });
        });
    }

    $(function () {
        $("#Periode").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Periode] harus dipilih" }]
        })

    });

    function onSelectionChanged(e) {
        if (e.addedItems.length > 0) {
            e.component.field().val("");
        }
    }

    function onButtonFilterClicked(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") {
            $("#grid1").dxDataGrid("instance").refresh();
        }
    }

    function onGridBeforeSend(method, ajaxOptions) {
        let jns = $("#Jns").dxTagBox("instance").option("value");
        let inq = $("#Inq").dxTextBox("instance").option("value");
        let periode = $("#Periode").dxTagBox("instance").option("value");
        ajaxOptions.data.jns = JSON.stringify(jns);
        ajaxOptions.data.inq = inq;
        ajaxOptions.data.periode = JSON.stringify(periode);
        ajaxOptions.data.reportId = '@reportId';
    }

    function Detail(e) {
        var keys = $("#grid1").dxDataGrid("getSelectedRowKeys");
        if (keys.length >= 1) {
            $.ajax({
			    type: "POST",
			    url: "@Url.Action("redi", "Osint", new { reportId = reportId })",
                contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                data: { id: JSON.stringify(keys)},
                dataType: "json",
                success: function (response) {
                    if (response.result == "Redirect") {
                        window.open(response.url, "_blank");
                    }
                }
		    });
            //window.open("@Url.Action("Detail", "Osint")/" + JSON.stringify(keys));
        } else {
            swal({ type: 'error', title: 'Oops...', text: 'Silahkan Pilih Baris Telebih Dahulu' });
        }
    }
    function ConvChar(str) {
        c = {
            '&lt;': '&amp;lt;', '&gt;': '&amp;gt;', '&': '&amp;amp;',
            '"': '&amp;quot;', "'": '&amp;#039;', '#': '&amp;#035;'
        };

        return str.replace(/[&lt;&amp;>'"#]/g, function (s) { return c[s]; });
    }
    function OpenBody() {
        alert('masuk');
        let tt = $("#texttest").dxTextBox("instance").option("value");
         $.ajax({
			type: "POST",
			url: "@Url.Action("TempPopup", "Osint", new { reportId = reportId })",
			contentType: "application/x-www-form-urlencoded;charset=UTF-8",
            dataType: "json",
             data: { id: JSON.stringify(tt) },
            success: function (response) {
                ShowPopupMain("@Url.Action("PopupBody", "Osint")", "Isi Detail", "900px", "500px");
            },
            error: function (response) {
                swal({ type: 'error', title: 'Failed', text: response });
            }
		});

    }
</script>

<style type="text/css">
    .mandatory {
        color: red;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">
        @*filter*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">
                    @*<input type="hidden" id="custId" name="custId" value="test">
                    @(Html.DevExtreme().TextBox().ID("texttest"))*@
                    <div class="col-lg-4 form-group">
                        <label>Periode Data<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Periode")
                            .DataSource(d => d.Mvc()
                                .Controller("Ref")
                                .LoadAction("GetPeriode")
                                .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            //.Value(p)
                            )

                    </div>
                    <div class="col-lg-4 form-group">
                        <label>Jenis Data</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Jns")
                            .DataSource(new[] {
                                new { display = "Debitur Badan Usaha", value = "Debitur Badan Usaha" },
                                new { display = "Fasilitas Pinjaman", value = "Fasilitas Pinjaman" },
                                new { display = "Kategori Lainnya", value = "Kategori Lainnya" }
                            })
                            .DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            .ValueExpr("value")
                            .DisplayExpr("display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>
                    <div class="col-lg-12 form-group">
                        <label>Inquiry Text</label>
                        @(Html.DevExtreme().TextBox().ID("Inq").Width("100%"))

                    </div>
                </div>

                <div class="float-left">
                    @(Html.DevExtreme().Button()
                        .ID("Filter")
                        .Type(ButtonType.Default)
                        .Text("Tampilkan")
                        .OnClick("onButtonFilterClicked")
                        .ValidationGroup("Filter"))
                </div>

                <div class="float-right">
                    <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:Detail();"><span class="image fa fa-desktop"></span> Detail</a>
                    @if (ViewBag.Export)
                    {
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:Antrian();"><span class="image fa fa-file-invoice"></span> Antrian (CSV)</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcel();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdf2();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                    }
                </div>
            </div>
        </div>

        @*grid*@
        <div class="gridview-div">
            @BDA.Helper.BDADXExt.OsintDataGrid((Html.DevExtreme().DataGrid()
                .ID("grid1")
                .DataSource(d => d.Mvc()
                    .Controller("Osint")
                    .LoadAction("GetGridData")
                    .OnBeforeSend("onGridBeforeSend")
                    .Key("lem")
                    )
                .RemoteOperations(true)
                .Width("100%")
                .AllowColumnResizing(true)
                .Scrolling(s => s.ShowScrollbar(ShowScrollbarMode.Always))
                .FilterRow(f => f.Visible(true))
                .ShowBorders(false)
                .Selection(c => { c.Mode(SelectionMode.Multiple);c.ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always);c.AllowSelectAll(false);})
                //.Selection(c => c.Mode(SelectionMode.Single))
                .Paging(p =>
                {
                    p.PageSize(15);
                    p.Enabled(true);
                })
                .Pager(p =>
                {
                    p.Visible(true);
                    p.ShowInfo(true);
                })
            ), db, reportId, isHive)
        </div>
    </div>
}