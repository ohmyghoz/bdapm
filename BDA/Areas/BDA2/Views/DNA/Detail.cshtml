@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
    var maxItems = db.GetSetting("LimitFilterLJK");
    bool isExport = ViewBag.Export;
    string reportId = ViewBag.id;
    bool isHive = ViewBag.Hive;
    var p = (string[])TempData.Peek("periode");
    var jns = (string[])TempData.Peek("jns");
    var jas = (string[])TempData.Peek("jas");
    var mem = (string[])TempData.Peek("member");
}

@inject BDA.DataModel.DataEntities db
<script src="~/js/cytoscape/cytoscape.min.js"></script>
<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>

<style>
    #cy {
        width: 100%;
        height: 800px;
        display: block;
    }
</style>
<script type="text/javascript">
    function ExportToExcel() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportIndex", "DNA", new {reportId = reportId})",
            success: function (response) {
                if (response.result == "Success") {
                    var grid = $("#grid1").dxDataGrid("instance");
                    grid.option("onExporting", function (e) {
                        e.fileName = "DNA_@(reportId)_" + new Date().toISOString().slice(0, 10);
                    });
                    grid.option("onFileSaving", function (e) { });
                    grid.exportToExcel();
                }
            }
        });
    }
    function ExportToPdf2() {
        var dataGrid = $("#grid1").dxDataGrid("instance");
        dataGrid.option("onExporting", function (e) { });
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportPDF", "DNA", new {reportId = reportId})",
                data: fd,
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("File", "DNA", new {reportId = reportId})"
            });
            e.cancel = true;
        });

        dataGrid.exportToExcel();
    }

    function Antrian() {
        $.ajax({
			type: "POST",
			url: "@Url.Action("Antrian2", "DNA", new { reportId = reportId })",
			contentType: "application/x-www-form-urlencoded;charset=UTF-8",
            dataType: "json",
            success: function (response) {
                swal({ type: 'success', title: 'Success', text: response });
            },
            error: function (response) {
                swal({ type: 'error', title: 'Failed', text: response });
            }
        });

    }

    $(function () {
        $("#Periode").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Periode] harus dipilih" }]
        })
        chkJenisNode();
    });
    function chkJenisNode() {
        let jns = $("#Jns").dxTagBox("instance").option("value");
        $("#divLJK").hide();
        $("#divAgunan").hide();

        if (jns.toString().includes("Kreditur") == true) {
            $("#divLJK").show();
        } 
        if (jns.toString().includes("Agunan") == true) {
            $("#divAgunan").show();
        } 
    }
    function onSelectionChanged(e) {
        if (e.addedItems.length > 0) {
            e.component.field().val("");
        }
    }


    function onLJKOpened(e) {
        e.component.content().find('.dx-list-select-all').hide();
    }

    const maxItems = @maxItems;

    function onLJKChanged(e) {
        if (e.value.length > maxItems) {
            const newValue = e.value.slice(0, maxItems);
            e.component.option("value", newValue);
            //tooltip.show();
        }
    }


</script>

<style type="text/css">
    .mandatory {
        color: red;
    }
    .download-link {
        position: absolute;
        top: -9999px;
        left: -9999px;
        opacity: 0;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">
        @*filter*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">

                    <div class="col-lg-4 form-group">
                        <label>Periode Pelaporan<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Periode")
                            .DataSource(d => d.Mvc()
                                .Controller("Ref")
                                .LoadAction("GetPeriode")
                                .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            .ReadOnly(true)
                            .Value(p)
                            )
                    </div>
                    <div class="col-lg-4 form-group">
                        <label>Jenis Node</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Jns")
                            .DataSource(new[] {
                                new { display = "CIF", value = "CIF" },
                                new { display = "LJK", value = "Kreditur" },
                                new { display = "Agunan", value = "Agunan" },
                                new { display = "Debitur", value = "Debitur" }
                            })
                            .DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            .ValueExpr("value")
                            .DisplayExpr("display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .ReadOnly(true)
                            .Value(jns)
                            .Width("100%"))
                    </div>
                    <div class="col-lg-4 form-group" id="divLJK">
                        <label>Kode LJK</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Members")
                            .DataSource(d => d.Mvc()
                                .Controller("Ref")
                                .LoadAction("GetMembersOnly")
                                .Key("CompositeKey")
                            )
                            .DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            //.ValueExpr("kode_ljk")
                            .ValueExpr("CompositeKey")
                            .DisplayExpr("Display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .OnOpened("onLJKOpened")
                            .OnValueChanged("onLJKChanged")
                            .ReadOnly(true)
                            .Value(mem)
                            .Width("100%"))
                    </div>

                    <div class="col-lg-4 form-group" id="divAgunan">
                        <label>Jenis Agunan</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Ja")
                            .DataSource(new[] {
                                new { display = "Kendaraan", value = "Kendaraan" },
                                new { display = "Rumah Tinggal", value = "Rumah Tinggal" },
                                new { display = "Tabungan", value = "Tabungan" }
                            })
                            .DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            .ValueExpr("value")
                            .DisplayExpr("display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .ReadOnly(true)
                            .Value(jas)
                            .Width("100%"))
                    </div>
                </div>

                <div class="float-right">
                    @if (ViewBag.Export)
                    {
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:Antrian();"><span class="image fa fa-file-invoice"></span> Antrian (CSV)</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcel();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdf2();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportDNA();" id="linkdownload" style="display:none;"><span class="image fa fa-file-image"></span> Export DNA</a>
                        <a class="btn btn-light-warning font-weight-bolder btn-sm mr-2" id="linkdownload2">Loading Graph</a>
                    }
                </div>
            </div>
        </div>

        @*grid*@

        <div class="gridview-div">
            @BDA.Helper.BDADXExt.DNADataGrid((Html.DevExtreme().DataGrid()
                .ID("grid1")
                .DataSource(d => d.Mvc()
                    .Controller("DNA")
                    .LoadAction("GetGridDataDetail")
                    //.OnBeforeSend("onGridBeforeSend")
                    )
                .RemoteOperations(true)
                .Width("100%")
                .AllowColumnResizing(true)
                .Scrolling(s => s.ShowScrollbar(ShowScrollbarMode.Always))
                .FilterRow(f => f.Visible(true))
                .ShowBorders(false)

                ///.Selection(c => c.Mode(SelectionMode.Single))
                .Paging(p =>
                {
                    p.PageSize(15);
                    p.Enabled(true);
                })
                .Pager(p =>
                {
                    p.Visible(true);
                    p.ShowInfo(true);
                })
            ), db, reportId, isHive)
        </div>
        @*chart*@
        <div class="gridview-div">
            <a href="#" class="download-link" download>Download</a>
            <div id="cy" class="text"></div>
            <script>
            var cy = cytoscape({
                container: document.getElementById('cy'), // container to render in
                style: [ // the stylesheet for the graph

                     {
                        selector: "node",
                        style: {
                            "width": "data(wh)",
                            "height": "data(wh)",
                            "content": "data(id)",
                            "font-size": "22px",
                            "text-valign": "center",
                            "text-halign": "center",
                            "background-color": "#f44336",
                            "text-outline-color": "#000",
                            "text-outline-width": "2px",
                            "color": "#fff",
                            "overlay-padding": "6px",
                            "z-index": "10"
                        }
                    },
                    {
                        "selector": "node[nc=\"A1\"]",
                        "style": {
                            "background-color": "#8fce00"
                        }
                    },
                    {
                        "selector": "node[nc=\"A2\"]",
                        "style": {
                            "background-color": "#d9ead3"
                        }
                    },
                    {
                        "selector": "node[nc=\"A3\"]",
                        "style": {
                            "background-color": "#f3f013"
                        }
                    },
                    {
                        "selector": "node[nc=\"A4\"]",
                        "style": {
                            "background-color": "#a2c4c9"
                        }
                    },
                    {
                        "selector": "node[nc=\"K1\"]",
                        "style": {
                            "background-color": "#c90076"
                        }
                    },
                    {
                        "selector": "node[nc=\"K2\"]",
                        "style": {
                            "background-color": "#d5a6bd"
                        }
                    },
                    {
                        "selector": "node[nc=\"C1\"]",
                        "style": {
                            "background-color": "#EEDDFF"
                        }
                    },
                    {
                        "selector": "node[nc=\"D1\"]",
                        "style": {
                            "background-color": "#f44336"
                        }
                    },
                    {
                        "selector": "node[nc=\"D2\"]",
                        "style": {
                            "background-color": "#c90076"
                        }
                    },
                    {
                        "selector": "node:selected",
                        "style": {
                            "border-width": "6px",
                            "border-color": "#AAD8FF",
                            "border-opacity": "0.5",
                            "background-color": "#77828C",
                            "text-outline-color": "#77828C"
                        }
                    },
                    {
                        selector: "edge",
                        style: {
                            "curve-style": "haystack",
                            "haystack-radius": "0.5",
                            "opacity": "0.4",
                            "line-color": "#bbb",

                            "overlay-padding": "3px"
                        }
                    }, {
                        "selector": "node.unhighlighted",
                        "style": {
                            "opacity": "0.2"
                        }
                    }, {
                        "selector": "edge.unhighlighted",
                        "style": {
                            "opacity": "0.05"
                        }
                    }, {
                        "selector": ".highlighted",
                        "style": {
                            "z-index": "999999"
                        }
                    }, {
                        "selector": "node.highlighted",
                        "style": {
                            "border-width": "6px",
                            "border-color": "#AAD8FF",
                            "border-opacity": "0.5",
                            "background-color": "#394855",
                            "text-outline-color": "#394855"
                        }
                    }, {
                        "selector": "edge.filtered",
                        "style": {
                            "opacity": "0"
                        }
                    }
                ],

                layout: {
                    name: 'cose',
                    idealEdgeLength: 100,
                    nodeOverlap: 20,
                    refresh: 200,
                    fit: true,
                    padding: 30,
                    componentSpacing: 100,
                    nodeRepulsion: 400000,
                    edgeElasticity: 100,
                    nestingFactor: 5,
                    gravity: 80,
                    numIter: 1000,
                    initialTemp: 200,
                    coolingFactor: 0.95,
                    minTemp: 1.0,
                    randomize: false
                }

            });
            
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetEdgesNodes", "DNA")",
                contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                dataType: "json",
                success: function (response) {
                    for (var key in response.Nodes.data) {
                        if (response.Nodes.data.hasOwnProperty(key)) {
                            cy.add([
                                { group: "nodes", data: { id: response.Nodes.data[key].id, score: parseFloat(response.Nodes.data[key].score), wh: response.Nodes.data[key].wh, nc: response.Nodes.data[key].nc } }
                            ])
                        }

                    }
                    for (var key in response.Edges.data) {
                        if (response.Edges.data.hasOwnProperty(key)) {
                            cy.add([
                                { group: "edges", data: { id: response.Edges.data[key].id, source: response.Edges.data[key].source, target: response.Edges.data[key].target} }
                            ])
                        }

                    }
                    cy.layout({
                        name: 'cose',
                        idealEdgeLength: 100,
                        nodeOverlap: 20,
                        refresh: 200,
                        fit: true,
                        padding: 30,
                        componentSpacing: 100,
                        nodeRepulsion: 400000,
                        edgeElasticity: 100,
                        nestingFactor: 5,
                        gravity: 80,
                        numIter: 1000,
                        initialTemp: 200,
                        coolingFactor: 0.95,
                        minTemp: 1.0,
                        randomize: false
                    }).run();
                        $("#linkdownload").show();
                        $("#linkdownload2").hide();
                }
            });
                function ExportDNA() {
                     $.ajax({
                        type: "POST",
                        url: "@Url.Action("LogExportIndex", "DNA", new {reportId = reportId})",
                        success: function (response) {
                            if (response.result == "Success") {
                                const base64URI = cy.png({ full: true });
                                const downloadLink = document.querySelector('.download-link')
                                console.log(base64URI);
                                downloadLink.href = base64URI;
                                downloadLink.download = "DGNDNA_" + new Date().toISOString().slice(0, 10) + ".png";
                                downloadLink.click();
                            }
                        }
                    });
                    //const base64URI = cy.png();
                    //const img = document.createElement('img');
                    //img.src = base64URI;

                    //const downloadLink = document.querySelector('.download-link')
                    //console.log(base64URI);
                    //downloadLink.href = base64URI;
                    //downloadLink.download = "DGNDNA_" + new Date().toISOString().slice(0, 10) + ".png";
                    //downloadLink.click();
                    //img.href = base64URI;
                    //img.setAttribute("download", "test.png");
                    //img.download = "tests.png";
                    //document.body.appendChild(img);
                    //img.click();
                    //document.body.appendChild(img);
                }
            </script>
        </div>
    </div>
}