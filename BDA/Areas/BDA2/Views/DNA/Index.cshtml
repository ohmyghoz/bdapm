@using DevExtreme.AspNet.Mvc
@{
    Layout = "~/Views/Shared/_LayoutMainMetronic.cshtml";
    var maxItems = db.GetSetting("LimitFilterLJK");
    bool isExport = ViewBag.Export;
    string reportId = ViewBag.id;
    bool isHive = ViewBag.Hive;
    var p = (string[])TempData.Peek("periode");
}

@inject BDA.DataModel.DataEntities db

<script>
    window.jsPDF = window.jspdf.jsPDF;
    applyPlugin(window.jsPDF);
</script>


<script type="text/javascript">
    function ExportToExcel() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("LogExportIndex", "DNA", new {reportId = reportId})",
            success: function (response) {
                if (response.result == "Success") {
                    var grid = $("#grid1").dxDataGrid("instance");
                    grid.option("onExporting", function (e) {
                        e.fileName = "DGN_@(reportId)_" + new Date().toISOString().slice(0, 10);
                    });
                    grid.option("onFileSaving", function (e) { });
                    grid.exportToExcel();
                }
            }
        });
    }
    function ExportToPdf2() {
        var dataGrid = $("#grid1").dxDataGrid("instance");
        dataGrid.option("onExporting", function (e) { });
        dataGrid.option("onFileSaving", function (e) {
            var fd = new FormData();
            fd.append("file", e.data);
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportPDF", "DNA", new {reportId = reportId})",
                data: fd,
                processData: false,
                contentType: false
            }).done(function (data) {
                window.location = "@Url.Action("File", "DNA", new {reportId = reportId})"
            });
            e.cancel = true;
        });

        dataGrid.exportToExcel();
    }
    function Antrian() {
        $("#grid1").dxDataGrid("instance").refresh().then(function () {
            $.ajax({
			type: "POST",
			url: "@Url.Action("Antrian", "DNA", new { reportId = reportId })",
			contentType: "application/x-www-form-urlencoded;charset=UTF-8",
            dataType: "json",
            success: function (response) {
                swal({ type: 'success', title: 'Success', text: response });
            },
            error: function (response) {
                swal({ type: 'error', title: 'Failed', text: response });
            }
		    });
        });
    }

    $(function () {
        $("#Periode").dxValidator({
            validationGroup: "Filter",
            validationRules: [{ type: "required", message: "[Periode] harus dipilih" }]
        })
        chkJenisNode();
    });
    function chkJenisNode() {
        let jns = $("#Jns").dxTagBox("instance").option("value");
        $("#divLJK").hide();
        $("#divAgunan").hide();

        if (jns.toString().includes("Kreditur") == true) {
            $("#Members").dxTagBox("instance").getDataSource().reload();
            $("#Members").dxTagBox("reset");
            $("#divLJK").show();
        } else {
            $("#Members").dxTagBox("instance").getDataSource().reload();
            $("#Members").dxTagBox("reset");
        }
        if (jns.toString().includes("Agunan") == true) {
            $("#Ja").dxTagBox("instance").getDataSource().reload();
            $("#Ja").dxTagBox("reset");
            $("#divAgunan").show();
        } else {
            $("#Ja").dxTagBox("instance").getDataSource().reload();
            $("#Ja").dxTagBox("reset");
        }
    }
    function onSelectionChanged(e) {
        if (e.addedItems.length > 0) {
            e.component.field().val("");
        }
    }

    function onButtonFilterClicked(e) {
        const res = e.validationGroup.validate();
        if (res.status === "valid") {
            $("#grid1").dxDataGrid("instance").refresh();
        }
    }

    function onGridBeforeSend(method, ajaxOptions) {
        let jns = $("#Jns").dxTagBox("instance").option("value");
        let ja = $("#Ja").dxTagBox("instance").option("value");
        let members = $("#Members").dxTagBox("instance").option("value");
        let periode = $("#Periode").dxTagBox("instance").option("value");
        ajaxOptions.data.jns = JSON.stringify(jns);
        ajaxOptions.data.ja = JSON.stringify(ja);
        ajaxOptions.data.periode = JSON.stringify(periode);
        ajaxOptions.data.members = JSON.stringify(members);
        ajaxOptions.data.reportId = '@reportId';
    }
    function onLJKOpened(e) {
        e.component.content().find('.dx-list-select-all').hide();
    }

    const maxItems = @maxItems;

    function onLJKChanged(e) {
        if (e.value.length > maxItems) {
            const newValue = e.value.slice(0, maxItems);
            e.component.option("value", newValue);
            //tooltip.show();
        }
    }
    function Detail(e) {
        var keys = $("#grid1").dxDataGrid("getSelectedRowKeys");
        if (keys.length >= 1) {
            $.ajax({
			    type: "POST",
			    url: "@Url.Action("redi", "DNA", new { reportId = reportId })",
                contentType: "application/x-www-form-urlencoded;charset=UTF-8",
                data: { id: JSON.stringify(keys)},
                dataType: "json",
                success: function (response) {
                    if (response.result == "Redirect") {
                        window.open(response.url, "_blank");
                    }
                }
		    });
            //window.open("@Url.Action("Detail", "DNA")/" + JSON.stringify(keys));
        } else {
            swal({ type: 'error', title: 'Oops...', text: 'Silahkan Pilih Baris Telebih Dahulu' });
        }
    }
    function selectChange(e) {
        if (e.selectedRowKeys.length <= 20) { this.selectedCount++; } else {
            e.component.deselectRows(e.currentSelectedRowKeys);
            //this.dataGrid.instance.deselectRows(row.currentSelectedRowKeys);
            this.selectedCount--;
        }
    }
</script>

<style type="text/css">
    .mandatory {
        color: red;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card card-default">
        @*filter*@
        <div class="row filter-panel" style="padding-top:0px;">
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 form-group">
                        <label>Periode Pelaporan<span class="mandatory">*</span></label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Periode")
                            .DataSource(d => d.Mvc()
                                .Controller("Ref")
                                .LoadAction("GetPeriode")
                                .Key("value"))
                            .ValueExpr("value")
                            .DisplayExpr("text")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%")
                            //.Value(p)
                            )
                    </div>
                    <div class="col-lg-4 form-group">
                        <label>Jenis Node</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Jns")
                            .DataSource(new[] {
                                new { display = "CIF", value = "CIF" },
                                new { display = "LJK", value = "Kreditur" },
                                new { display = "Agunan", value = "Agunan" },
                                new { display = "Debitur", value = "Debitur" }
                            })
                            .DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            .ValueExpr("value")
                            .DisplayExpr("display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnValueChanged("chkJenisNode")
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>
                    <div class="col-lg-4 form-group" id="divLJK">
                        <label>Kode LJK</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Members")
                            .DataSource(d => d.Mvc()
                                .Controller("Ref")
                                .LoadAction("GetMembersOnly")
                                .Key("CompositeKey")
                            )
                            .DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            //.ValueExpr("kode_ljk")
                            .ValueExpr("CompositeKey")
                            .DisplayExpr("Display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .OnOpened("onLJKOpened")
                            .OnValueChanged("onLJKChanged")
                            .Width("100%"))
                    </div>
                    <div class="col-lg-4 form-group" id="divAgunan">
                        <label>Jenis Agunan</label>
                        @(Html.DevExtreme().TagBox()
                            .ID("Ja")
                            .DataSource(new[] {
                                new { display = "Kendaraan", value = "Kendaraan" },
                                new { display = "Rumah Tinggal", value = "Rumah Tinggal" },
                                new { display = "Tabungan", value = "Tabungan" }
                            })
                            .DataSourceOptions(d => d.Paginate(true).PageSize(10))
                            .ValueExpr("value")
                            .DisplayExpr("display")
                            .ShowSelectionControls(true)
                            .MaxDisplayedTags(3)
                            .SearchEnabled(true)
                            .ShowClearButton(true)
                            .OnSelectionChanged("onSelectionChanged")
                            .Width("100%"))
                    </div>
                </div>

                <div class="float-left">
                    @(Html.DevExtreme().Button()
                        .ID("Filter")
                        .Type(ButtonType.Default)
                        .Text("Tampilkan")
                        .OnClick("onButtonFilterClicked")
                        .ValidationGroup("Filter"))
                </div>
                <div class="float-left">
                    <div style="border-radius: 10px; background-color: orange; padding: 3px">
                        <span style="color: white; font-weight: bold;">Maksimal checklist 20 Row Data</span>
                    </div>
                </div>
                <div class="float-right">
                    <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:Detail();"><span class="image fa fa-desktop"></span> Detail</a>
                    @if (ViewBag.Export)
                    {
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:Antrian();"><span class="image fa fa-file-invoice"></span> Antrian (CSV)</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToExcel();"><span class="image fa fa-file-excel"></span> Export Excel</a>
                        <a class="btn btn-light-primary font-weight-bolder btn-sm mr-2" href="javascript:ExportToPdf2();"><span class="image fa fa-file-pdf"></span> Export PDF</a>
                    }
                </div>
            </div>
        </div>

        @*grid*@
        <div class="gridview-div">
            @BDA.Helper.BDADXExt.DNADataGrid((Html.DevExtreme().DataGrid()
                .ID("grid1")
                .DataSource(d => d.Mvc()
                    .Controller("DNA")
                    .LoadAction("GetGridData")
                    .OnBeforeSend("onGridBeforeSend")
                    .Key("lem")
                    )
                .RemoteOperations(true)
                .Width("100%")
                .AllowColumnResizing(true)
                .Scrolling(s => s.ShowScrollbar(ShowScrollbarMode.Always))
                .FilterRow(f => f.Visible(true))
                .ShowBorders(false)
                .Selection(c =>
                {
                    c.Mode(SelectionMode.Multiple);
                    c.AllowSelectAll(false);
                })
                .OnSelectionChanged("selectChange")
                .Paging(p =>
                {
                    p.PageSize(15);
                    p.Enabled(true);
                })
                .Pager(p =>
                {
                    p.Visible(true);
                    p.ShowInfo(true);
                })
            ), db, reportId, isHive)
        </div>
    </div>
}